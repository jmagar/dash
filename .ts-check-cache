{
  "src\\server\\services\\alerts\\alerts.types.ts": {
    "hash": "39fbca238197c85f48aad0d89057b1f1",
    "stats": {
      "path": "src\\server\\services\\alerts\\alerts.types.ts",
      "errors": 17,
      "warnings": 0,
      "messages": [
        {
          "type": "error",
          "message": "Namespace 'Intl' has no exported member 'Segmenter'.",
          "line": 42,
          "column": 25
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 12,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'PromptProps'.",
          "line": 18,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Prompt'.",
          "line": 19,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RedirectProps'.",
          "line": 22,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'Redirect'. Did you mean 'redirect'?",
          "line": 23,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteChildrenProps'.",
          "line": 24,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteComponentProps'.",
          "line": 25,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouterProps'.",
          "line": 30,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouter'.",
          "line": 31,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'SwitchProps'.",
          "line": 32,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Switch'.",
          "line": 33,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 34,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'withRouter'.",
          "line": 36,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouterChildContext'.",
          "line": 37,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'useHistory'.",
          "line": 38,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'useRouteMatch'. Did you mean 'RouteMatch'?",
          "line": 41,
          "column": 4
        }
      ]
    },
    "timestamp": 1733633455729
  },
  "src\\server\\services\\alerts\\alerts.service.ts": {
    "hash": "e79763d8360ef249a958ec8ab1154d3a",
    "stats": {
      "path": "src\\server\\services\\alerts\\alerts.service.ts",
      "errors": 269,
      "warnings": 0,
      "messages": [
        {
          "type": "error",
          "message": "Namespace 'Intl' has no exported member 'Segmenter'.",
          "line": 42,
          "column": 25
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 12,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'PromptProps'.",
          "line": 18,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Prompt'.",
          "line": 19,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RedirectProps'.",
          "line": 22,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'Redirect'. Did you mean 'redirect'?",
          "line": 23,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteChildrenProps'.",
          "line": 24,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteComponentProps'.",
          "line": 25,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouterProps'.",
          "line": 30,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouter'.",
          "line": 31,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'SwitchProps'.",
          "line": 32,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Switch'.",
          "line": 33,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 34,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'withRouter'.",
          "line": 36,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouterChildContext'.",
          "line": 37,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'useHistory'.",
          "line": 38,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'useRouteMatch'. Did you mean 'RouteMatch'?",
          "line": 41,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"ioredis\"' has no exported member 'RedisStatus'. Did you mean to use 'import RedisStatus from \"ioredis\"' instead?",
          "line": 1,
          "column": 25
        },
        {
          "type": "error",
          "message": "Interface 'RedisClientType' incorrectly extends interface 'Redis'.\n  Types of property 'del' are incompatible.\n    Type '(key: string) => Promise<number>' is not assignable to type '{ (...args: [...keys: RedisKey[], callback: Callback<number>]): Promise<number>; (keys: RedisKey[], callback: Callback<number>): Promise<number>; (...args: RedisKey[]): Promise<...>; (keys: RedisKey[]): Promise<...>; }'.\n      Types of parameters 'key' and 'keys' are incompatible.\n        Type '[...keys: RedisKey[], callback: Callback<number>]' is not assignable to type '[key: string]'.\n          Target allows only 1 element(s) but source may have more.",
          "line": 23,
          "column": 10
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'string' is not assignable to type 'LogLevel'.",
          "line": 143,
          "column": 4
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 4,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'logger' in type 'CacheManager' is not assignable to the same property in base type 'BaseService'.\n  Type 'LoggingManager' is missing the following properties from type 'LoggerAdapter': logger, context, withContext, critical",
          "line": 34,
          "column": 21
        },
        {
          "type": "error",
          "message": "Type '{ retryOptions: { maxAttempts: number; initialDelay: number; maxDelay: number; factor: number; timeout: number; }; cacheOptions: { ttl: number; prefix: string; }; metricsEnabled: boolean; loggingEnabled: boolean; validation: { ...; }; }' has no properties in common with type 'ServiceOptions'.",
          "line": 43,
          "column": 10
        },
        {
          "type": "error",
          "message": "Module '\"path\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 1,
          "column": 7
        },
        {
          "type": "error",
          "message": "Type 'JsonValue' is not assignable to type 'JsonObject'.\n  Type 'string' is not assignable to type 'JsonObject'.",
          "line": 23,
          "column": 8
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 2,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'error' does not exist on type 'SafeParseReturnType<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }, { ...; }>'.\n  Property 'error' does not exist on type 'SafeParseSuccess<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }>'.",
          "line": 229,
          "column": 23
        },
        {
          "type": "error",
          "message": "Property 'error' does not exist on type 'SafeParseReturnType<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }, { ...; }>'.\n  Property 'error' does not exist on type 'SafeParseSuccess<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }>'.",
          "line": 233,
          "column": 25
        },
        {
          "type": "error",
          "message": "Cannot find module 'sequelize' or its corresponding type declarations.",
          "line": 5,
          "column": 55
        },
        {
          "type": "error",
          "message": "Cannot find module './SecurityManager' or its corresponding type declarations.",
          "line": 13,
          "column": 32
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 55,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 73,
          "column": 41
        },
        {
          "type": "error",
          "message": "Argument of type 'string' is not assignable to parameter of type 'never'.",
          "line": 163,
          "column": 26
        },
        {
          "type": "error",
          "message": "Property 'query' does not exist on type 'never'.",
          "line": 165,
          "column": 77
        },
        {
          "type": "error",
          "message": "Property 'params' does not exist on type 'never'.",
          "line": 165,
          "column": 98
        },
        {
          "type": "error",
          "message": "Argument of type 'string' is not assignable to parameter of type 'never'.",
          "line": 168,
          "column": 26
        },
        {
          "type": "error",
          "message": "Argument of type 'Omit<PrismaClient<PrismaClientOptions, never, DefaultArgs>, \"$connect\" | \"$disconnect\" | \"$on\" | \"$transaction\" | \"$use\" | \"$extends\">' is not assignable to parameter of type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.\n  Type 'Omit<PrismaClient<PrismaClientOptions, never, DefaultArgs>, \"$connect\" | \"$disconnect\" | \"$on\" | \"$transaction\" | \"$use\" | \"$extends\">' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 2 more.",
          "line": 316,
          "column": 31
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 322,
          "column": 42
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 347,
          "column": 44
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'DatabaseManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 382,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'emit' in type 'DatabaseManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, ...args: any[]) => void' is not assignable to type '<K>(eventName: string | symbol, ...args: AnyRest) => boolean'.\n    Type 'void' is not assignable to type 'boolean'.",
          "line": 386,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/winston/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 5,
          "column": 7
        },
        {
          "type": "error",
          "message": "Non-abstract class 'LoggingManager' does not implement all abstract members of 'BaseService'",
          "line": 56,
          "column": 13
        },
        {
          "type": "error",
          "message": "Property 'config' in type 'LoggingManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ level?: \"error\" | \"http\" | \"debug\" | \"info\" | \"warn\" | \"verbose\" | \"silly\"; format?: \"json\" | \"pretty\" | \"simple\"; console?: { enabled?: boolean; level?: \"error\" | \"http\" | \"debug\" | \"info\" | \"warn\" | \"verbose\" | \"silly\"; }; file?: { ...; }; metadata?: { ...; }; }' is missing the following properties from type 'ServiceConfig': name, version, dependencies",
          "line": 59,
          "column": 10
        },
        {
          "type": "error",
          "message": "Property 'configManager' does not exist on type 'LoggingManager'.",
          "line": 88,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'configManager' does not exist on type 'LoggingManager'.",
          "line": 96,
          "column": 33
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 108,
          "column": 58
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 114,
          "column": 57
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 120,
          "column": 59
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 126,
          "column": 64
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; }' is not assignable to parameter of type 'string'.",
          "line": 133,
          "column": 57
        },
        {
          "type": "error",
          "message": "Property 'initializeMetrics' does not exist on type 'LoggingManager'.",
          "line": 148,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'file' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 154,
          "column": 31
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 304,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 324,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'name' does not exist on type 'LoggingManager'.",
          "line": 354,
          "column": 28
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 355,
          "column": 28
        },
        {
          "type": "error",
          "message": "Cannot find module '../security/SecurityManager' or its corresponding type declarations.",
          "line": 4,
          "column": 32
        },
        {
          "type": "error",
          "message": "Cannot find module './FileSystemManager' or its corresponding type declarations.",
          "line": 10,
          "column": 34
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 1,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'metrics' in type 'MetricsManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ httpRequestDuration: Histogram<\"method\" | \"route\" | \"status_code\">; apiErrors: Counter<\"method\" | \"route\" | \"error_type\">; operationDuration: Histogram<\"success\" | \"operation\" | \"service\">; ... 8 more ...; incrementApiError: (method: string, route: string, errorType: string) => void; }' is missing the following properties from type 'MetricsManager': registry, metricStore, metrics, getRegistry, and 43 more.",
          "line": 35,
          "column": 30
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/service.types' or its corresponding type declarations.",
          "line": 14,
          "column": 45
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 73,
          "column": 1
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 104,
          "column": 6
        },
        {
          "type": "error",
          "message": "Cannot assign to 'config' because it is a read-only property.",
          "line": 136,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'healthCheckMetric' because it is a read-only property.",
          "line": 139,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'failingHealthCheckMetric' because it is a read-only property.",
          "line": 140,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'alertMetric' because it is a read-only property.",
          "line": 141,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'unacknowledgedAlertMetric' because it is a read-only property.",
          "line": 142,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'checkDurationMetric' because it is a read-only property.",
          "line": 143,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'alertSeverityMetric' because it is a read-only property.",
          "line": 144,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'MonitoringManager' is not assignable to the same property in base type 'BaseService'.\n  Type '<K extends keyof MonitoringEvents>(event: K, listener: MonitoringEvents[K]) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 434,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'MonitoringManager' is not assignable to the same property in base type 'BaseService'.\n  Type '<K extends keyof MonitoringEvents>(event: K, listener: MonitoringEvents[K]) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 441,
          "column": 9
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 449,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 457,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 465,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 473,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 481,
          "column": 48
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 490,
          "column": 44
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/error' or its corresponding type declarations.",
          "line": 13,
          "column": 25
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 37,
          "column": 6
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 99,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 100,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'hashIdentifier' does not exist on type 'SecurityManager'.",
          "line": 159,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 161,
          "column": 48
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 165,
          "column": 78
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 166,
          "column": 52
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 170,
          "column": 33
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 171,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 199,
          "column": 28
        },
        {
          "type": "error",
          "message": "Expected 4 arguments, but got 0.",
          "line": 272,
          "column": 30
        },
        {
          "type": "error",
          "message": "Module '\"./services/MetricsService\"' has no exported member 'MetricsService'.",
          "line": 11,
          "column": 9
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 17,
          "column": 1
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 59,
          "column": 24
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 60,
          "column": 27
        },
        {
          "type": "error",
          "message": "Expected 0 arguments, but got 1.",
          "line": 62,
          "column": 51
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 71,
          "column": 38
        },
        {
          "type": "error",
          "message": "Spread types may only be created from object types.",
          "line": 88,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 1.",
          "line": 121,
          "column": 29
        },
        {
          "type": "error",
          "message": "Property 'verifyToken' does not exist on type 'TokenService'.",
          "line": 125,
          "column": 29
        },
        {
          "type": "error",
          "message": "Property 'validate' does not exist on type 'PasswordValidator'. Did you mean to access the static member 'PasswordValidator.validate' instead?",
          "line": 137,
          "column": 34
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 83,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 84,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 85,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 86,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 87,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 11,
          "column": 50
        },
        {
          "type": "error",
          "message": "Property 'bcryptSaltRounds' does not exist on type 'JsonValue'.\n  Property 'bcryptSaltRounds' does not exist on type 'string'.",
          "line": 11,
          "column": 72
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 20,
          "column": 46
        },
        {
          "type": "error",
          "message": "Property 'passwordPolicy' does not exist on type 'JsonValue'.\n  Property 'passwordPolicy' does not exist on type 'string'.",
          "line": 20,
          "column": 68
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/@types/ms/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 1,
          "column": 7
        },
        {
          "type": "error",
          "message": "Property 'getJwtSecret' does not exist on type 'ConfigManager'.",
          "line": 16,
          "column": 25
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 17,
          "column": 38
        },
        {
          "type": "error",
          "message": "Property 'jwtExpiresIn' does not exist on type 'JsonValue'.\n  Property 'jwtExpiresIn' does not exist on type 'string'.",
          "line": 17,
          "column": 60
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 20,
          "column": 57
        },
        {
          "type": "error",
          "message": "Property 'jwtExpiresIn' does not exist on type 'JsonValue'.\n  Property 'jwtExpiresIn' does not exist on type 'string'.",
          "line": 20,
          "column": 79
        },
        {
          "type": "error",
          "message": "Property 'getJwtSecret' does not exist on type 'ConfigManager'.",
          "line": 33,
          "column": 55
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/service.types' or its corresponding type declarations.",
          "line": 9,
          "column": 45
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 44,
          "column": 1
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 71,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 120,
          "column": 74
        },
        {
          "type": "error",
          "message": "Property 'cleanup' is protected and only accessible through an instance of class 'ServiceManager'. This is an instance of class 'BaseService'.",
          "line": 191,
          "column": 24
        },
        {
          "type": "error",
          "message": "Type 'ConfigOperationResult<any[]>' must have a '[Symbol.iterator]()' method that returns an iterator.",
          "line": 214,
          "column": 27
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 43,
          "column": 6
        },
        {
          "type": "error",
          "message": "Property 'url' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 57,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'retryAttempts' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 59,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'retryDelay' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 60,
          "column": 32
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n      Property '[Symbol.dispose]' is missing in type 'Timer' but required in type 'Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 113,
          "column": 22
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 3, '(callback: () => void, ms?: number): Timeout', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.\n  Overload 2 of 3, '(callback: (args: void) => void, ms?: number): Timeout', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.\n  Overload 3 of 3, '(handler: TimerHandler, timeout?: number, ...arguments: any[]): number', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.",
          "line": 165,
          "column": 7
        },
        {
          "type": "error",
          "message": "Expected 1-2 arguments, but got 3.",
          "line": 204,
          "column": 9
        },
        {
          "type": "error",
          "message": "No value exists in scope for the shorthand property 'namespace'. Either declare one or provide an initializer.",
          "line": 294,
          "column": 61
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'StateManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: unknown[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 300,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'StateManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: unknown[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 304,
          "column": 9
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 309,
          "column": 28
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 68,
          "column": 6
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 129,
          "column": 22
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 132,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 326,
          "column": 19
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 348,
          "column": 19
        },
        {
          "type": "error",
          "message": "Argument of type '\"failed\" | \"running\" | \"pending\" | \"completed\" | \"cancelled\" | \"retrying\"' is not assignable to parameter of type 'TaskStatus'.\n  Type '\"failed\"' is not assignable to type 'TaskStatus'.",
          "line": 408,
          "column": 17
        },
        {
          "type": "error",
          "message": "Argument of type '\"failed\" | \"running\" | \"pending\" | \"completed\" | \"cancelled\" | \"retrying\"' is not assignable to parameter of type 'TaskStatus'.",
          "line": 408,
          "column": 42
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'TaskManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 514,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'TaskManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 518,
          "column": 9
        },
        {
          "type": "error",
          "message": "Cannot find module './SecurityManager' or its corresponding type declarations.",
          "line": 12,
          "column": 32
        },
        {
          "type": "error",
          "message": "Property 'config' in type 'WebSocketManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ cors?: { origins?: string[]; methods?: string[]; }; connectionTimeout?: number; maxConnections?: number; }' is missing the following properties from type 'ServiceConfig': name, version, dependencies",
          "line": 45,
          "column": 10
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 79,
          "column": 67
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; }' is not assignable to parameter of type 'string'.",
          "line": 97,
          "column": 60
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 102,
          "column": 59
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 108,
          "column": 57
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 114,
          "column": 72
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'WebSocketManager'.",
          "line": 164,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'WebSocketManager'.",
          "line": 178,
          "column": 22
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 9,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'number' has no properties in common with type 'Partial<Record<\"success\" | \"operation\" | \"service\", string | number>>'.",
          "line": 180,
          "column": 30
        },
        {
          "type": "error",
          "message": "Cannot find module '../managers/utils/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:connected\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 38,
          "column": 18
        },
        {
          "type": "error",
          "message": "Cannot assign to 'agentId' because it is a read-only property.",
          "line": 80,
          "column": 16
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 95,
          "column": 16
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:metrics\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 105,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 115,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:heartbeat\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 131,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:stream\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 146,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:new\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 169,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:error\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 187,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 224,
          "column": 24
        },
        {
          "type": "error",
          "message": "Cannot find module '../../../types/alerts.types' or its corresponding type declarations.",
          "line": 1,
          "column": 42
        },
        {
          "type": "error",
          "message": "Cannot find module '../../../types/notifications.types' or its corresponding type declarations.",
          "line": 3,
          "column": 33
        },
        {
          "type": "error",
          "message": "Type '\"alert\"' is not assignable to type 'NotificationType'.",
          "line": 19,
          "column": 8
        },
        {
          "type": "error",
          "message": "Type 'unknown[]' is not assignable to type 'AlertRule[]'.\n  Type '{}' is missing the following properties from type 'AlertRule': id, hostId, name, enabled, and 5 more.",
          "line": 55,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'unknown[]' is not assignable to type 'AlertRule[]'.",
          "line": 79,
          "column": 6
        },
        {
          "type": "error",
          "message": "Argument of type '{ metricsEnabled: boolean; loggingEnabled: boolean; validation: { strict: boolean; }; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'metricsEnabled' does not exist in type 'ServiceOptions'.",
          "line": 67,
          "column": 6
        },
        {
          "type": "error",
          "message": "This member cannot have an 'override' modifier because it is not declared in the base class 'BaseService'. Did you mean 'metrics'?",
          "line": 75,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'getMetrics' does not exist on type 'BaseService'. Did you mean 'metrics'?",
          "line": 76,
          "column": 30
        },
        {
          "type": "error",
          "message": "Type 'void' is not assignable to type 'DockerCommandResult'.",
          "line": 221,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"../../utils/logger\"' has no exported member 'logger'. Did you mean to use 'import logger from \"../../utils/logger\"' instead?",
          "line": 1,
          "column": 9
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 4,
          "column": 0
        },
        {
          "type": "error",
          "message": "',' expected.",
          "line": 4,
          "column": 7
        },
        {
          "type": "error",
          "message": "String literal expected.",
          "line": 4,
          "column": 7
        },
        {
          "type": "error",
          "message": "';' expected.",
          "line": 4,
          "column": 26
        },
        {
          "type": "error",
          "message": "Cannot find name 'from'.",
          "line": 4,
          "column": 26
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'. Did you mean 'Notification'?",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Left side of comma operator is unused and has no side effects.",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Left side of comma operator is unused and has no side effects.",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Left side of comma operator is unused and has no side effects.",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationFilter'. Did you mean 'Notification'?",
          "line": 6,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'. Did you mean 'Notification'?",
          "line": 7,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'ServiceStatus'.",
          "line": 8,
          "column": 2
        },
        {
          "type": "error",
          "message": "Declaration or statement expected.",
          "line": 9,
          "column": 0
        },
        {
          "type": "error",
          "message": "Unexpected keyword or identifier.",
          "line": 9,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'from'.",
          "line": 9,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'. Did you mean 'Notification'?",
          "line": 12,
          "column": 29
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'. Did you mean 'Notification'?",
          "line": 12,
          "column": 58
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 14,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 34,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 34,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 39,
          "column": 52
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 41,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 52,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 52,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 57,
          "column": 47
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 59,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 66,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 66,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 71,
          "column": 48
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 73,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 84,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 84,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 89,
          "column": 49
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 91,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 97,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 97,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationFilter'.",
          "line": 102,
          "column": 45
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 102,
          "column": 74
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 146,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 149,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 149,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'.",
          "line": 154,
          "column": 62
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'.",
          "line": 156,
          "column": 44
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'.",
          "line": 173,
          "column": 22
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 175,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 175,
          "column": 41
        },
        {
          "type": "error",
          "message": "Module '\"../../utils/logger\"' has no exported member 'logger'. Did you mean to use 'import logger from \"../../utils/logger\"' instead?",
          "line": 1,
          "column": 9
        },
        {
          "type": "error",
          "message": "'\"../../../types/notifications\"' has no exported member named 'isPartialNotificationPreferences'. Did you mean 'isNotificationPreferences'?",
          "line": 15,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"./batch.service\"' has no exported member 'batchService'.",
          "line": 17,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"./delivery.service\"' has no exported member 'deliveryService'.",
          "line": 18,
          "column": 9
        },
        {
          "type": "error",
          "message": "Cannot find module '../../managers/utils/LoggingManager' or its corresponding type declarations.",
          "line": 21,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type '\"web\" | NotificationChannel' is not assignable to type 'NotificationChannel'.\n  Type '\"web\"' is not assignable to type 'NotificationChannel'.",
          "line": 88,
          "column": 6
        },
        {
          "type": "error",
          "message": "No value exists in scope for the shorthand property 'userId'. Either declare one or provide an initializer.",
          "line": 198,
          "column": 8
        },
        {
          "type": "error",
          "message": "Module '\"../../utils/logger\"' has no exported member 'logger'. Did you mean to use 'import logger from \"../../utils/logger\"' instead?",
          "line": 1,
          "column": 9
        },
        {
          "type": "error",
          "message": "Cannot find module '../../managers/utils/LoggingManager' or its corresponding type declarations.",
          "line": 13,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'WebChannelConfig' is not assignable to type 'Partial<ChannelConfig>'.\n  Types of property 'desktop' are incompatible.\n    Type 'boolean' is not assignable to type 'DesktopChannelConfig'.",
          "line": 22,
          "column": 8
        },
        {
          "type": "error",
          "message": "Type 'GotifyChannelConfig' has no properties in common with type 'Partial<ChannelConfig>'.",
          "line": 31,
          "column": 8
        },
        {
          "type": "error",
          "message": "Type 'DesktopChannelConfig' has no properties in common with type 'Partial<ChannelConfig>'.",
          "line": 38,
          "column": 8
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 82,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 82,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 123,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 123,
          "column": 41
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/winston-transport/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 0,
          "column": 7
        },
        {
          "type": "error",
          "message": "'\"../../types/transports\"' has no exported member named 'FileTransportOptions'. Did you mean 'TransportOptions'?",
          "line": 10,
          "column": 2
        },
        {
          "type": "error",
          "message": "'\"../../types/transports\"' has no exported member named 'ConsoleTransportOptions'. Did you mean 'TransportOptions'?",
          "line": 11,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"../../types/transports\"' has no exported member 'DEFAULT_FILE_TRANSPORT_CONFIG'.",
          "line": 12,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"../../types/transports\"' has no exported member 'DEFAULT_CONSOLE_CONFIG'.",
          "line": 13,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find module './logging/LoggingManager' or its corresponding type declarations.",
          "line": 27,
          "column": 31
        },
        {
          "type": "error",
          "message": "Cannot find name 'consoleLoggingManager'. Did you mean 'LoggingManager'?",
          "line": 38,
          "column": 2
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 38,
          "column": 38
        },
        {
          "type": "error",
          "message": "'DEFAULT_CONSOLE_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 50,
          "column": 7
        },
        {
          "type": "error",
          "message": "'DEFAULT_FORMAT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 52,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type 'boolean | { level?: boolean; message?: boolean; colors?: { error?: string; debug?: string; info?: string; warn?: string; critical?: string; }; }' is not assignable to parameter of type 'ColorizeOptions'.\n  Type 'false' has no properties in common with type 'ColorizeOptions'.",
          "line": 52,
          "column": 22
        },
        {
          "type": "error",
          "message": "'DEFAULT_FILE_TRANSPORT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 58,
          "column": 7
        },
        {
          "type": "error",
          "message": "'DEFAULT_FORMAT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 60,
          "column": 23
        },
        {
          "type": "error",
          "message": "Type 'FormatOptions' has no properties in common with type 'TimestampOptions'.",
          "line": 60,
          "column": 23
        },
        {
          "type": "error",
          "message": "Argument of type 'GotifyTransport' is not assignable to parameter of type 'TransportStream'.\n  Type 'GotifyTransport' is missing the following properties from type 'TransportStream': _write, _final, end, destroy, and 13 more.",
          "line": 68,
          "column": 21
        },
        {
          "type": "error",
          "message": "Argument of type '{ level: \"error\"; handleExceptions: boolean; handleRejections: boolean; }' is not assignable to parameter of type 'GotifyTransportOptions'.\n  Object literal may only specify known properties, and 'handleExceptions' does not exist in type 'GotifyTransportOptions'.",
          "line": 70,
          "column": 4
        },
        {
          "type": "error",
          "message": "'DEFAULT_FORMAT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 83,
          "column": 25
        },
        {
          "type": "error",
          "message": "Type 'FormatOptions' has no properties in common with type 'TimestampOptions'.",
          "line": 83,
          "column": 25
        },
        {
          "type": "error",
          "message": "The type 'readonly [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"]' is 'readonly' and cannot be assigned to the mutable type 'string[]'.",
          "line": 165,
          "column": 6
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerNetwork'.",
          "line": 0,
          "column": 31
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerVolume'.",
          "line": 0,
          "column": 46
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerStats'.",
          "line": 0,
          "column": 60
        },
        {
          "type": "error",
          "message": "'ApiError' cannot be used as a value because it was imported using 'import type'.",
          "line": 106,
          "column": 32
        },
        {
          "type": "error",
          "message": "Expected 2-3 arguments, but got 4.",
          "line": 114,
          "column": 6
        },
        {
          "type": "error",
          "message": "Cannot assign to 'name' because it is a read-only property.",
          "line": 116,
          "column": 9
        },
        {
          "type": "error",
          "message": "This member cannot have an 'override' modifier because it is not declared in the base class 'ApiError'.",
          "line": 121,
          "column": 18
        },
        {
          "type": "error",
          "message": "Property 'toJSON' does not exist on type 'ApiError'.",
          "line": 123,
          "column": 15
        },
        {
          "type": "error",
          "message": "Cannot find module './logging' or its corresponding type declarations.",
          "line": 9,
          "column": 7
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerStats'.",
          "line": 14,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerComposeConfig'.",
          "line": 16,
          "column": 2
        }
      ]
    },
    "timestamp": 1733633462245
  },
  "src\\server\\services\\alerts\\metrics.service.ts": {
    "hash": "8554aef7b3b415da9f8982ac37c53d88",
    "stats": {
      "path": "src\\server\\services\\alerts\\metrics.service.ts",
      "errors": 188,
      "warnings": 2,
      "messages": [
        {
          "type": "error",
          "message": "Namespace 'Intl' has no exported member 'Segmenter'.",
          "line": 42,
          "column": 25
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 12,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'PromptProps'.",
          "line": 18,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Prompt'.",
          "line": 19,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RedirectProps'.",
          "line": 22,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'Redirect'. Did you mean 'redirect'?",
          "line": 23,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteChildrenProps'.",
          "line": 24,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteComponentProps'.",
          "line": 25,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouterProps'.",
          "line": 30,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouter'.",
          "line": 31,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'SwitchProps'.",
          "line": 32,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Switch'.",
          "line": 33,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 34,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'withRouter'.",
          "line": 36,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouterChildContext'.",
          "line": 37,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'useHistory'.",
          "line": 38,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'useRouteMatch'. Did you mean 'RouteMatch'?",
          "line": 41,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"ioredis\"' has no exported member 'RedisStatus'. Did you mean to use 'import RedisStatus from \"ioredis\"' instead?",
          "line": 1,
          "column": 25
        },
        {
          "type": "error",
          "message": "Interface 'RedisClientType' incorrectly extends interface 'Redis'.\n  Types of property 'del' are incompatible.\n    Type '(key: string) => Promise<number>' is not assignable to type '{ (...args: [...keys: RedisKey[], callback: Callback<number>]): Promise<number>; (keys: RedisKey[], callback: Callback<number>): Promise<number>; (...args: RedisKey[]): Promise<...>; (keys: RedisKey[]): Promise<...>; }'.\n      Types of parameters 'key' and 'keys' are incompatible.\n        Type '[...keys: RedisKey[], callback: Callback<number>]' is not assignable to type '[key: string]'.\n          Target allows only 1 element(s) but source may have more.",
          "line": 23,
          "column": 10
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'string' is not assignable to type 'LogLevel'.",
          "line": 143,
          "column": 4
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 4,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'logger' in type 'CacheManager' is not assignable to the same property in base type 'BaseService'.\n  Type 'LoggingManager' is missing the following properties from type 'LoggerAdapter': logger, context, withContext, critical",
          "line": 34,
          "column": 21
        },
        {
          "type": "error",
          "message": "Type '{ retryOptions: { maxAttempts: number; initialDelay: number; maxDelay: number; factor: number; timeout: number; }; cacheOptions: { ttl: number; prefix: string; }; metricsEnabled: boolean; loggingEnabled: boolean; validation: { ...; }; }' has no properties in common with type 'ServiceOptions'.",
          "line": 43,
          "column": 10
        },
        {
          "type": "error",
          "message": "Module '\"path\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 1,
          "column": 7
        },
        {
          "type": "error",
          "message": "Type 'JsonValue' is not assignable to type 'JsonObject'.\n  Type 'string' is not assignable to type 'JsonObject'.",
          "line": 23,
          "column": 8
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 2,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'error' does not exist on type 'SafeParseReturnType<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"warn\" | \"info\" | \"debug\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }, { ...; }>'.\n  Property 'error' does not exist on type 'SafeParseSuccess<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"warn\" | \"info\" | \"debug\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }>'.",
          "line": 229,
          "column": 23
        },
        {
          "type": "error",
          "message": "Property 'error' does not exist on type 'SafeParseReturnType<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"warn\" | \"info\" | \"debug\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }, { ...; }>'.\n  Property 'error' does not exist on type 'SafeParseSuccess<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"warn\" | \"info\" | \"debug\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }>'.",
          "line": 233,
          "column": 25
        },
        {
          "type": "error",
          "message": "Cannot find module 'sequelize' or its corresponding type declarations.",
          "line": 5,
          "column": 55
        },
        {
          "type": "error",
          "message": "Cannot find module './SecurityManager' or its corresponding type declarations.",
          "line": 13,
          "column": 32
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 55,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 73,
          "column": 41
        },
        {
          "type": "error",
          "message": "Argument of type 'string' is not assignable to parameter of type 'never'.",
          "line": 163,
          "column": 26
        },
        {
          "type": "error",
          "message": "Property 'query' does not exist on type 'never'.",
          "line": 165,
          "column": 77
        },
        {
          "type": "error",
          "message": "Property 'params' does not exist on type 'never'.",
          "line": 165,
          "column": 98
        },
        {
          "type": "error",
          "message": "Argument of type 'string' is not assignable to parameter of type 'never'.",
          "line": 168,
          "column": 26
        },
        {
          "type": "error",
          "message": "Argument of type 'Omit<PrismaClient<PrismaClientOptions, never, DefaultArgs>, \"$connect\" | \"$disconnect\" | \"$on\" | \"$transaction\" | \"$use\" | \"$extends\">' is not assignable to parameter of type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.\n  Type 'Omit<PrismaClient<PrismaClientOptions, never, DefaultArgs>, \"$connect\" | \"$disconnect\" | \"$on\" | \"$transaction\" | \"$use\" | \"$extends\">' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 2 more.",
          "line": 316,
          "column": 31
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 322,
          "column": 42
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 347,
          "column": 44
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'DatabaseManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 382,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'emit' in type 'DatabaseManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, ...args: any[]) => void' is not assignable to type '<K>(eventName: string | symbol, ...args: AnyRest) => boolean'.\n    Type 'void' is not assignable to type 'boolean'.",
          "line": 386,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/winston/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 5,
          "column": 7
        },
        {
          "type": "error",
          "message": "Non-abstract class 'LoggingManager' does not implement all abstract members of 'BaseService'",
          "line": 56,
          "column": 13
        },
        {
          "type": "error",
          "message": "Property 'config' in type 'LoggingManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ level?: \"error\" | \"warn\" | \"info\" | \"http\" | \"debug\" | \"verbose\" | \"silly\"; format?: \"json\" | \"pretty\" | \"simple\"; console?: { enabled?: boolean; level?: \"error\" | \"warn\" | \"info\" | \"http\" | \"debug\" | \"verbose\" | \"silly\"; }; file?: { ...; }; metadata?: { ...; }; }' is missing the following properties from type 'ServiceConfig': name, version, dependencies",
          "line": 59,
          "column": 10
        },
        {
          "type": "error",
          "message": "Property 'configManager' does not exist on type 'LoggingManager'.",
          "line": 88,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'configManager' does not exist on type 'LoggingManager'.",
          "line": 96,
          "column": 33
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 108,
          "column": 58
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 114,
          "column": 57
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 120,
          "column": 59
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 126,
          "column": 64
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; }' is not assignable to parameter of type 'string'.",
          "line": 133,
          "column": 57
        },
        {
          "type": "error",
          "message": "Property 'initializeMetrics' does not exist on type 'LoggingManager'.",
          "line": 148,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'file' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 154,
          "column": 31
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 304,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 324,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'name' does not exist on type 'LoggingManager'.",
          "line": 354,
          "column": 28
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 355,
          "column": 28
        },
        {
          "type": "error",
          "message": "Cannot find module '../security/SecurityManager' or its corresponding type declarations.",
          "line": 4,
          "column": 32
        },
        {
          "type": "error",
          "message": "Cannot find module './FileSystemManager' or its corresponding type declarations.",
          "line": 10,
          "column": 34
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 1,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'metrics' in type 'MetricsManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ httpRequestDuration: Histogram<\"method\" | \"route\" | \"status_code\">; apiErrors: Counter<\"method\" | \"route\" | \"error_type\">; operationDuration: Histogram<\"success\" | \"service\" | \"operation\">; ... 8 more ...; incrementApiError: (method: string, route: string, errorType: string) => void; }' is missing the following properties from type 'MetricsManager': registry, metricStore, metrics, getRegistry, and 43 more.",
          "line": 35,
          "column": 30
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/service.types' or its corresponding type declarations.",
          "line": 14,
          "column": 45
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 73,
          "column": 1
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 104,
          "column": 6
        },
        {
          "type": "error",
          "message": "Cannot assign to 'config' because it is a read-only property.",
          "line": 136,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'healthCheckMetric' because it is a read-only property.",
          "line": 139,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'failingHealthCheckMetric' because it is a read-only property.",
          "line": 140,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'alertMetric' because it is a read-only property.",
          "line": 141,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'unacknowledgedAlertMetric' because it is a read-only property.",
          "line": 142,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'checkDurationMetric' because it is a read-only property.",
          "line": 143,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'alertSeverityMetric' because it is a read-only property.",
          "line": 144,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'MonitoringManager' is not assignable to the same property in base type 'BaseService'.\n  Type '<K extends keyof MonitoringEvents>(event: K, listener: MonitoringEvents[K]) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 434,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'MonitoringManager' is not assignable to the same property in base type 'BaseService'.\n  Type '<K extends keyof MonitoringEvents>(event: K, listener: MonitoringEvents[K]) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 441,
          "column": 9
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 449,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 457,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 465,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 473,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 481,
          "column": 48
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 490,
          "column": 44
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/error' or its corresponding type declarations.",
          "line": 13,
          "column": 25
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 37,
          "column": 6
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 99,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 100,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'hashIdentifier' does not exist on type 'SecurityManager'.",
          "line": 159,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 161,
          "column": 48
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 165,
          "column": 78
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 166,
          "column": 52
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 170,
          "column": 33
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 171,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 199,
          "column": 28
        },
        {
          "type": "error",
          "message": "Expected 4 arguments, but got 0.",
          "line": 272,
          "column": 30
        },
        {
          "type": "error",
          "message": "Module '\"./services/MetricsService\"' has no exported member 'MetricsService'.",
          "line": 11,
          "column": 9
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 17,
          "column": 1
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 59,
          "column": 24
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 60,
          "column": 27
        },
        {
          "type": "error",
          "message": "Expected 0 arguments, but got 1.",
          "line": 62,
          "column": 51
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 71,
          "column": 38
        },
        {
          "type": "error",
          "message": "Spread types may only be created from object types.",
          "line": 88,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 1.",
          "line": 121,
          "column": 29
        },
        {
          "type": "error",
          "message": "Property 'verifyToken' does not exist on type 'TokenService'.",
          "line": 125,
          "column": 29
        },
        {
          "type": "error",
          "message": "Property 'validate' does not exist on type 'PasswordValidator'. Did you mean to access the static member 'PasswordValidator.validate' instead?",
          "line": 137,
          "column": 34
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 83,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 84,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 85,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 86,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 87,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 11,
          "column": 50
        },
        {
          "type": "error",
          "message": "Property 'bcryptSaltRounds' does not exist on type 'JsonValue'.\n  Property 'bcryptSaltRounds' does not exist on type 'string'.",
          "line": 11,
          "column": 72
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 20,
          "column": 46
        },
        {
          "type": "error",
          "message": "Property 'passwordPolicy' does not exist on type 'JsonValue'.\n  Property 'passwordPolicy' does not exist on type 'string'.",
          "line": 20,
          "column": 68
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/@types/ms/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 1,
          "column": 7
        },
        {
          "type": "error",
          "message": "Property 'getJwtSecret' does not exist on type 'ConfigManager'.",
          "line": 16,
          "column": 25
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 17,
          "column": 38
        },
        {
          "type": "error",
          "message": "Property 'jwtExpiresIn' does not exist on type 'JsonValue'.\n  Property 'jwtExpiresIn' does not exist on type 'string'.",
          "line": 17,
          "column": 60
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 20,
          "column": 57
        },
        {
          "type": "error",
          "message": "Property 'jwtExpiresIn' does not exist on type 'JsonValue'.\n  Property 'jwtExpiresIn' does not exist on type 'string'.",
          "line": 20,
          "column": 79
        },
        {
          "type": "error",
          "message": "Property 'getJwtSecret' does not exist on type 'ConfigManager'.",
          "line": 33,
          "column": 55
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/service.types' or its corresponding type declarations.",
          "line": 9,
          "column": 45
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 44,
          "column": 1
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 71,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 120,
          "column": 74
        },
        {
          "type": "error",
          "message": "Property 'cleanup' is protected and only accessible through an instance of class 'ServiceManager'. This is an instance of class 'BaseService'.",
          "line": 191,
          "column": 24
        },
        {
          "type": "error",
          "message": "Type 'ConfigOperationResult<any[]>' must have a '[Symbol.iterator]()' method that returns an iterator.",
          "line": 214,
          "column": 27
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 43,
          "column": 6
        },
        {
          "type": "error",
          "message": "Property 'url' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 57,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'retryAttempts' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 59,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'retryDelay' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 60,
          "column": 32
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n      Property '[Symbol.dispose]' is missing in type 'Timer' but required in type 'Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 113,
          "column": 22
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 3, '(callback: () => void, ms?: number): Timeout', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.\n  Overload 2 of 3, '(callback: (args: void) => void, ms?: number): Timeout', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.\n  Overload 3 of 3, '(handler: TimerHandler, timeout?: number, ...arguments: any[]): number', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.",
          "line": 165,
          "column": 7
        },
        {
          "type": "error",
          "message": "Expected 1-2 arguments, but got 3.",
          "line": 204,
          "column": 9
        },
        {
          "type": "error",
          "message": "No value exists in scope for the shorthand property 'namespace'. Either declare one or provide an initializer.",
          "line": 294,
          "column": 61
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'StateManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: unknown[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 300,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'StateManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: unknown[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 304,
          "column": 9
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 309,
          "column": 28
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 68,
          "column": 6
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 129,
          "column": 22
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 132,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 326,
          "column": 19
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 348,
          "column": 19
        },
        {
          "type": "error",
          "message": "Argument of type '\"failed\" | \"running\" | \"pending\" | \"completed\" | \"cancelled\" | \"retrying\"' is not assignable to parameter of type 'TaskStatus'.\n  Type '\"failed\"' is not assignable to type 'TaskStatus'.",
          "line": 408,
          "column": 17
        },
        {
          "type": "error",
          "message": "Argument of type '\"failed\" | \"running\" | \"pending\" | \"completed\" | \"cancelled\" | \"retrying\"' is not assignable to parameter of type 'TaskStatus'.",
          "line": 408,
          "column": 42
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'TaskManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 514,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'TaskManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 518,
          "column": 9
        },
        {
          "type": "error",
          "message": "Cannot find module './SecurityManager' or its corresponding type declarations.",
          "line": 12,
          "column": 32
        },
        {
          "type": "error",
          "message": "Property 'config' in type 'WebSocketManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ cors?: { origins?: string[]; methods?: string[]; }; connectionTimeout?: number; maxConnections?: number; }' is missing the following properties from type 'ServiceConfig': name, version, dependencies",
          "line": 45,
          "column": 10
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 79,
          "column": 67
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; }' is not assignable to parameter of type 'string'.",
          "line": 97,
          "column": 60
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 102,
          "column": 59
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 108,
          "column": 57
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 114,
          "column": 72
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'WebSocketManager'.",
          "line": 164,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'WebSocketManager'.",
          "line": 178,
          "column": 22
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 9,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'number' has no properties in common with type 'Partial<Record<\"success\" | \"service\" | \"operation\", string | number>>'.",
          "line": 180,
          "column": 30
        },
        {
          "type": "error",
          "message": "Cannot find module '../managers/utils/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:connected\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 38,
          "column": 18
        },
        {
          "type": "error",
          "message": "Cannot assign to 'agentId' because it is a read-only property.",
          "line": 80,
          "column": 16
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 95,
          "column": 16
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:metrics\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 105,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 115,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:heartbeat\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 131,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:stream\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 146,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:new\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 169,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:error\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 187,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 224,
          "column": 24
        },
        {
          "type": "error",
          "message": "Property 'usage' does not exist on type 'number | { total: number; usage: number; system: number; user: number; idle: number; iowait: number; steal: number; cores: number; threads: number; model: string; }'.\n  Property 'usage' does not exist on type 'number'.",
          "line": 37,
          "column": 35
        },
        {
          "type": "error",
          "message": "Property 'usage' does not exist on type 'number | { total: number; used: number; free: number; shared: number; buffers: number; cached: number; available: number; swap_total: number; swap_used: number; swap_free: number; usage: number; }'.\n  Property 'usage' does not exist on type 'number'.",
          "line": 45,
          "column": 41
        },
        {
          "type": "error",
          "message": "Property 'operator' does not exist on type 'AlertRule'.",
          "line": 85,
          "column": 18
        },
        {
          "type": "error",
          "message": "Argument of type '{ metricsEnabled: boolean; loggingEnabled: boolean; validation: { strict: boolean; }; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'metricsEnabled' does not exist in type 'ServiceOptions'.",
          "line": 67,
          "column": 6
        },
        {
          "type": "error",
          "message": "This member cannot have an 'override' modifier because it is not declared in the base class 'BaseService'. Did you mean 'metrics'?",
          "line": 75,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'getMetrics' does not exist on type 'BaseService'. Did you mean 'metrics'?",
          "line": 76,
          "column": 30
        },
        {
          "type": "error",
          "message": "Type 'void' is not assignable to type 'DockerCommandResult'.",
          "line": 221,
          "column": 4
        },
        {
          "type": "error",
          "message": "The type 'readonly [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"]' is 'readonly' and cannot be assigned to the mutable type 'string[]'.",
          "line": 165,
          "column": 6
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerNetwork'.",
          "line": 0,
          "column": 31
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerVolume'.",
          "line": 0,
          "column": 46
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerStats'.",
          "line": 0,
          "column": 60
        },
        {
          "type": "error",
          "message": "'ApiError' cannot be used as a value because it was imported using 'import type'.",
          "line": 106,
          "column": 32
        },
        {
          "type": "error",
          "message": "Expected 2-3 arguments, but got 4.",
          "line": 114,
          "column": 6
        },
        {
          "type": "error",
          "message": "Cannot assign to 'name' because it is a read-only property.",
          "line": 116,
          "column": 9
        },
        {
          "type": "error",
          "message": "This member cannot have an 'override' modifier because it is not declared in the base class 'ApiError'.",
          "line": 121,
          "column": 18
        },
        {
          "type": "error",
          "message": "Property 'toJSON' does not exist on type 'ApiError'.",
          "line": 123,
          "column": 15
        },
        {
          "type": "error",
          "message": "Cannot find module './logging' or its corresponding type declarations.",
          "line": 9,
          "column": 7
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerStats'.",
          "line": 14,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerComposeConfig'.",
          "line": 16,
          "column": 2
        },
        {
          "type": "error",
          "message": "Unexpected empty constructor.",
          "line": 9,
          "column": 25,
          "rule": "@typescript-eslint/no-empty-function"
        },
        {
          "type": "warning",
          "message": "Unsafe assignment of an `any` value.",
          "line": 38,
          "column": 13,
          "rule": "@typescript-eslint/no-unsafe-assignment"
        },
        {
          "type": "warning",
          "message": "Unsafe assignment of an `any` value.",
          "line": 46,
          "column": 13,
          "rule": "@typescript-eslint/no-unsafe-assignment"
        },
        {
          "type": "error",
          "message": "Invalid type \"never\" of template literal expression.",
          "line": 71,
          "column": 47,
          "rule": "@typescript-eslint/restrict-template-expressions"
        }
      ]
    },
    "timestamp": 1733639381456
  },
  "src\\server\\services\\alerts\\index.ts": {
    "hash": "c82934f89b8bcbd456bfbb9330c12d75",
    "stats": {
      "path": "src\\server\\services\\alerts\\index.ts",
      "errors": 269,
      "warnings": 0,
      "messages": [
        {
          "type": "error",
          "message": "Namespace 'Intl' has no exported member 'Segmenter'.",
          "line": 42,
          "column": 25
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 12,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'PromptProps'.",
          "line": 18,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Prompt'.",
          "line": 19,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RedirectProps'.",
          "line": 22,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'Redirect'. Did you mean 'redirect'?",
          "line": 23,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteChildrenProps'.",
          "line": 24,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteComponentProps'.",
          "line": 25,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouterProps'.",
          "line": 30,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouter'.",
          "line": 31,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'SwitchProps'.",
          "line": 32,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Switch'.",
          "line": 33,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 34,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'withRouter'.",
          "line": 36,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouterChildContext'.",
          "line": 37,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'useHistory'.",
          "line": 38,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'useRouteMatch'. Did you mean 'RouteMatch'?",
          "line": 41,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"ioredis\"' has no exported member 'RedisStatus'. Did you mean to use 'import RedisStatus from \"ioredis\"' instead?",
          "line": 1,
          "column": 25
        },
        {
          "type": "error",
          "message": "Interface 'RedisClientType' incorrectly extends interface 'Redis'.\n  Types of property 'del' are incompatible.\n    Type '(key: string) => Promise<number>' is not assignable to type '{ (...args: [...keys: RedisKey[], callback: Callback<number>]): Promise<number>; (keys: RedisKey[], callback: Callback<number>): Promise<number>; (...args: RedisKey[]): Promise<...>; (keys: RedisKey[]): Promise<...>; }'.\n      Types of parameters 'key' and 'keys' are incompatible.\n        Type '[...keys: RedisKey[], callback: Callback<number>]' is not assignable to type '[key: string]'.\n          Target allows only 1 element(s) but source may have more.",
          "line": 23,
          "column": 10
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'string' is not assignable to type 'LogLevel'.",
          "line": 143,
          "column": 4
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 4,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'logger' in type 'CacheManager' is not assignable to the same property in base type 'BaseService'.\n  Type 'LoggingManager' is missing the following properties from type 'LoggerAdapter': logger, context, withContext, critical",
          "line": 34,
          "column": 21
        },
        {
          "type": "error",
          "message": "Type '{ retryOptions: { maxAttempts: number; initialDelay: number; maxDelay: number; factor: number; timeout: number; }; cacheOptions: { ttl: number; prefix: string; }; metricsEnabled: boolean; loggingEnabled: boolean; validation: { ...; }; }' has no properties in common with type 'ServiceOptions'.",
          "line": 43,
          "column": 10
        },
        {
          "type": "error",
          "message": "Module '\"path\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 1,
          "column": 7
        },
        {
          "type": "error",
          "message": "Type 'JsonValue' is not assignable to type 'JsonObject'.\n  Type 'string' is not assignable to type 'JsonObject'.",
          "line": 23,
          "column": 8
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 2,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'error' does not exist on type 'SafeParseReturnType<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }, { ...; }>'.\n  Property 'error' does not exist on type 'SafeParseSuccess<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }>'.",
          "line": 229,
          "column": 23
        },
        {
          "type": "error",
          "message": "Property 'error' does not exist on type 'SafeParseReturnType<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }, { ...; }>'.\n  Property 'error' does not exist on type 'SafeParseSuccess<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }>'.",
          "line": 233,
          "column": 25
        },
        {
          "type": "error",
          "message": "Cannot find module 'sequelize' or its corresponding type declarations.",
          "line": 5,
          "column": 55
        },
        {
          "type": "error",
          "message": "Cannot find module './SecurityManager' or its corresponding type declarations.",
          "line": 13,
          "column": 32
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 55,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 73,
          "column": 41
        },
        {
          "type": "error",
          "message": "Argument of type 'string' is not assignable to parameter of type 'never'.",
          "line": 163,
          "column": 26
        },
        {
          "type": "error",
          "message": "Property 'query' does not exist on type 'never'.",
          "line": 165,
          "column": 77
        },
        {
          "type": "error",
          "message": "Property 'params' does not exist on type 'never'.",
          "line": 165,
          "column": 98
        },
        {
          "type": "error",
          "message": "Argument of type 'string' is not assignable to parameter of type 'never'.",
          "line": 168,
          "column": 26
        },
        {
          "type": "error",
          "message": "Argument of type 'Omit<PrismaClient<PrismaClientOptions, never, DefaultArgs>, \"$connect\" | \"$disconnect\" | \"$on\" | \"$transaction\" | \"$use\" | \"$extends\">' is not assignable to parameter of type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.\n  Type 'Omit<PrismaClient<PrismaClientOptions, never, DefaultArgs>, \"$connect\" | \"$disconnect\" | \"$on\" | \"$transaction\" | \"$use\" | \"$extends\">' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 2 more.",
          "line": 316,
          "column": 31
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 322,
          "column": 42
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 347,
          "column": 44
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'DatabaseManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 382,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'emit' in type 'DatabaseManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, ...args: any[]) => void' is not assignable to type '<K>(eventName: string | symbol, ...args: AnyRest) => boolean'.\n    Type 'void' is not assignable to type 'boolean'.",
          "line": 386,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/winston/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 5,
          "column": 7
        },
        {
          "type": "error",
          "message": "Non-abstract class 'LoggingManager' does not implement all abstract members of 'BaseService'",
          "line": 56,
          "column": 13
        },
        {
          "type": "error",
          "message": "Property 'config' in type 'LoggingManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ level?: \"error\" | \"http\" | \"debug\" | \"info\" | \"warn\" | \"verbose\" | \"silly\"; format?: \"json\" | \"pretty\" | \"simple\"; console?: { enabled?: boolean; level?: \"error\" | \"http\" | \"debug\" | \"info\" | \"warn\" | \"verbose\" | \"silly\"; }; file?: { ...; }; metadata?: { ...; }; }' is missing the following properties from type 'ServiceConfig': name, version, dependencies",
          "line": 59,
          "column": 10
        },
        {
          "type": "error",
          "message": "Property 'configManager' does not exist on type 'LoggingManager'.",
          "line": 88,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'configManager' does not exist on type 'LoggingManager'.",
          "line": 96,
          "column": 33
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 108,
          "column": 58
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 114,
          "column": 57
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 120,
          "column": 59
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 126,
          "column": 64
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; }' is not assignable to parameter of type 'string'.",
          "line": 133,
          "column": 57
        },
        {
          "type": "error",
          "message": "Property 'initializeMetrics' does not exist on type 'LoggingManager'.",
          "line": 148,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'file' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 154,
          "column": 31
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 304,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 324,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'name' does not exist on type 'LoggingManager'.",
          "line": 354,
          "column": 28
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 355,
          "column": 28
        },
        {
          "type": "error",
          "message": "Cannot find module '../security/SecurityManager' or its corresponding type declarations.",
          "line": 4,
          "column": 32
        },
        {
          "type": "error",
          "message": "Cannot find module './FileSystemManager' or its corresponding type declarations.",
          "line": 10,
          "column": 34
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 1,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'metrics' in type 'MetricsManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ httpRequestDuration: Histogram<\"method\" | \"route\" | \"status_code\">; apiErrors: Counter<\"method\" | \"route\" | \"error_type\">; operationDuration: Histogram<\"success\" | \"operation\" | \"service\">; ... 8 more ...; incrementApiError: (method: string, route: string, errorType: string) => void; }' is missing the following properties from type 'MetricsManager': registry, metricStore, metrics, getRegistry, and 43 more.",
          "line": 35,
          "column": 30
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/service.types' or its corresponding type declarations.",
          "line": 14,
          "column": 45
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 73,
          "column": 1
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 104,
          "column": 6
        },
        {
          "type": "error",
          "message": "Cannot assign to 'config' because it is a read-only property.",
          "line": 136,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'healthCheckMetric' because it is a read-only property.",
          "line": 139,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'failingHealthCheckMetric' because it is a read-only property.",
          "line": 140,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'alertMetric' because it is a read-only property.",
          "line": 141,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'unacknowledgedAlertMetric' because it is a read-only property.",
          "line": 142,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'checkDurationMetric' because it is a read-only property.",
          "line": 143,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'alertSeverityMetric' because it is a read-only property.",
          "line": 144,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'MonitoringManager' is not assignable to the same property in base type 'BaseService'.\n  Type '<K extends keyof MonitoringEvents>(event: K, listener: MonitoringEvents[K]) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 434,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'MonitoringManager' is not assignable to the same property in base type 'BaseService'.\n  Type '<K extends keyof MonitoringEvents>(event: K, listener: MonitoringEvents[K]) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 441,
          "column": 9
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 449,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 457,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 465,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 473,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 481,
          "column": 48
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 490,
          "column": 44
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/error' or its corresponding type declarations.",
          "line": 13,
          "column": 25
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 37,
          "column": 6
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 99,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 100,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'hashIdentifier' does not exist on type 'SecurityManager'.",
          "line": 159,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 161,
          "column": 48
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 165,
          "column": 78
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 166,
          "column": 52
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 170,
          "column": 33
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 171,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 199,
          "column": 28
        },
        {
          "type": "error",
          "message": "Expected 4 arguments, but got 0.",
          "line": 272,
          "column": 30
        },
        {
          "type": "error",
          "message": "Module '\"./services/MetricsService\"' has no exported member 'MetricsService'.",
          "line": 11,
          "column": 9
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 17,
          "column": 1
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 59,
          "column": 24
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 60,
          "column": 27
        },
        {
          "type": "error",
          "message": "Expected 0 arguments, but got 1.",
          "line": 62,
          "column": 51
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 71,
          "column": 38
        },
        {
          "type": "error",
          "message": "Spread types may only be created from object types.",
          "line": 88,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 1.",
          "line": 121,
          "column": 29
        },
        {
          "type": "error",
          "message": "Property 'verifyToken' does not exist on type 'TokenService'.",
          "line": 125,
          "column": 29
        },
        {
          "type": "error",
          "message": "Property 'validate' does not exist on type 'PasswordValidator'. Did you mean to access the static member 'PasswordValidator.validate' instead?",
          "line": 137,
          "column": 34
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 83,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 84,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 85,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 86,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 87,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 11,
          "column": 50
        },
        {
          "type": "error",
          "message": "Property 'bcryptSaltRounds' does not exist on type 'JsonValue'.\n  Property 'bcryptSaltRounds' does not exist on type 'string'.",
          "line": 11,
          "column": 72
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 20,
          "column": 46
        },
        {
          "type": "error",
          "message": "Property 'passwordPolicy' does not exist on type 'JsonValue'.\n  Property 'passwordPolicy' does not exist on type 'string'.",
          "line": 20,
          "column": 68
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/@types/ms/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 1,
          "column": 7
        },
        {
          "type": "error",
          "message": "Property 'getJwtSecret' does not exist on type 'ConfigManager'.",
          "line": 16,
          "column": 25
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 17,
          "column": 38
        },
        {
          "type": "error",
          "message": "Property 'jwtExpiresIn' does not exist on type 'JsonValue'.\n  Property 'jwtExpiresIn' does not exist on type 'string'.",
          "line": 17,
          "column": 60
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 20,
          "column": 57
        },
        {
          "type": "error",
          "message": "Property 'jwtExpiresIn' does not exist on type 'JsonValue'.\n  Property 'jwtExpiresIn' does not exist on type 'string'.",
          "line": 20,
          "column": 79
        },
        {
          "type": "error",
          "message": "Property 'getJwtSecret' does not exist on type 'ConfigManager'.",
          "line": 33,
          "column": 55
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/service.types' or its corresponding type declarations.",
          "line": 9,
          "column": 45
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 44,
          "column": 1
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 71,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 120,
          "column": 74
        },
        {
          "type": "error",
          "message": "Property 'cleanup' is protected and only accessible through an instance of class 'ServiceManager'. This is an instance of class 'BaseService'.",
          "line": 191,
          "column": 24
        },
        {
          "type": "error",
          "message": "Type 'ConfigOperationResult<any[]>' must have a '[Symbol.iterator]()' method that returns an iterator.",
          "line": 214,
          "column": 27
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 43,
          "column": 6
        },
        {
          "type": "error",
          "message": "Property 'url' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 57,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'retryAttempts' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 59,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'retryDelay' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 60,
          "column": 32
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n      Property '[Symbol.dispose]' is missing in type 'Timer' but required in type 'Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 113,
          "column": 22
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 3, '(callback: () => void, ms?: number): Timeout', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.\n  Overload 2 of 3, '(callback: (args: void) => void, ms?: number): Timeout', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.\n  Overload 3 of 3, '(handler: TimerHandler, timeout?: number, ...arguments: any[]): number', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.",
          "line": 165,
          "column": 7
        },
        {
          "type": "error",
          "message": "Expected 1-2 arguments, but got 3.",
          "line": 204,
          "column": 9
        },
        {
          "type": "error",
          "message": "No value exists in scope for the shorthand property 'namespace'. Either declare one or provide an initializer.",
          "line": 294,
          "column": 61
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'StateManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: unknown[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 300,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'StateManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: unknown[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 304,
          "column": 9
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 309,
          "column": 28
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 68,
          "column": 6
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 129,
          "column": 22
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 132,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 326,
          "column": 19
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 348,
          "column": 19
        },
        {
          "type": "error",
          "message": "Argument of type '\"failed\" | \"running\" | \"pending\" | \"completed\" | \"cancelled\" | \"retrying\"' is not assignable to parameter of type 'TaskStatus'.\n  Type '\"failed\"' is not assignable to type 'TaskStatus'.",
          "line": 408,
          "column": 17
        },
        {
          "type": "error",
          "message": "Argument of type '\"failed\" | \"running\" | \"pending\" | \"completed\" | \"cancelled\" | \"retrying\"' is not assignable to parameter of type 'TaskStatus'.",
          "line": 408,
          "column": 42
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'TaskManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 514,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'TaskManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 518,
          "column": 9
        },
        {
          "type": "error",
          "message": "Cannot find module './SecurityManager' or its corresponding type declarations.",
          "line": 12,
          "column": 32
        },
        {
          "type": "error",
          "message": "Property 'config' in type 'WebSocketManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ cors?: { origins?: string[]; methods?: string[]; }; connectionTimeout?: number; maxConnections?: number; }' is missing the following properties from type 'ServiceConfig': name, version, dependencies",
          "line": 45,
          "column": 10
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 79,
          "column": 67
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; }' is not assignable to parameter of type 'string'.",
          "line": 97,
          "column": 60
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 102,
          "column": 59
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 108,
          "column": 57
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 114,
          "column": 72
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'WebSocketManager'.",
          "line": 164,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'WebSocketManager'.",
          "line": 178,
          "column": 22
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 9,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'number' has no properties in common with type 'Partial<Record<\"success\" | \"operation\" | \"service\", string | number>>'.",
          "line": 180,
          "column": 30
        },
        {
          "type": "error",
          "message": "Cannot find module '../managers/utils/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:connected\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 38,
          "column": 18
        },
        {
          "type": "error",
          "message": "Cannot assign to 'agentId' because it is a read-only property.",
          "line": 80,
          "column": 16
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 95,
          "column": 16
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:metrics\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 105,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 115,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:heartbeat\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 131,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:stream\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 146,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:new\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 169,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:error\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 187,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 224,
          "column": 24
        },
        {
          "type": "error",
          "message": "Cannot find module '../../../types/alerts.types' or its corresponding type declarations.",
          "line": 1,
          "column": 42
        },
        {
          "type": "error",
          "message": "Cannot find module '../../../types/notifications.types' or its corresponding type declarations.",
          "line": 3,
          "column": 33
        },
        {
          "type": "error",
          "message": "Type '\"alert\"' is not assignable to type 'NotificationType'.",
          "line": 19,
          "column": 8
        },
        {
          "type": "error",
          "message": "Type 'unknown[]' is not assignable to type 'AlertRule[]'.\n  Type '{}' is missing the following properties from type 'AlertRule': id, hostId, name, enabled, and 5 more.",
          "line": 55,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'unknown[]' is not assignable to type 'AlertRule[]'.",
          "line": 79,
          "column": 6
        },
        {
          "type": "error",
          "message": "Argument of type '{ metricsEnabled: boolean; loggingEnabled: boolean; validation: { strict: boolean; }; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'metricsEnabled' does not exist in type 'ServiceOptions'.",
          "line": 67,
          "column": 6
        },
        {
          "type": "error",
          "message": "This member cannot have an 'override' modifier because it is not declared in the base class 'BaseService'. Did you mean 'metrics'?",
          "line": 75,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'getMetrics' does not exist on type 'BaseService'. Did you mean 'metrics'?",
          "line": 76,
          "column": 30
        },
        {
          "type": "error",
          "message": "Type 'void' is not assignable to type 'DockerCommandResult'.",
          "line": 221,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"../../utils/logger\"' has no exported member 'logger'. Did you mean to use 'import logger from \"../../utils/logger\"' instead?",
          "line": 1,
          "column": 9
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 4,
          "column": 0
        },
        {
          "type": "error",
          "message": "',' expected.",
          "line": 4,
          "column": 7
        },
        {
          "type": "error",
          "message": "String literal expected.",
          "line": 4,
          "column": 7
        },
        {
          "type": "error",
          "message": "';' expected.",
          "line": 4,
          "column": 26
        },
        {
          "type": "error",
          "message": "Cannot find name 'from'.",
          "line": 4,
          "column": 26
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'. Did you mean 'Notification'?",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Left side of comma operator is unused and has no side effects.",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Left side of comma operator is unused and has no side effects.",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Left side of comma operator is unused and has no side effects.",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationFilter'. Did you mean 'Notification'?",
          "line": 6,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'. Did you mean 'Notification'?",
          "line": 7,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'ServiceStatus'.",
          "line": 8,
          "column": 2
        },
        {
          "type": "error",
          "message": "Declaration or statement expected.",
          "line": 9,
          "column": 0
        },
        {
          "type": "error",
          "message": "Unexpected keyword or identifier.",
          "line": 9,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'from'.",
          "line": 9,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'. Did you mean 'Notification'?",
          "line": 12,
          "column": 29
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'. Did you mean 'Notification'?",
          "line": 12,
          "column": 58
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 14,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 34,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 34,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 39,
          "column": 52
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 41,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 52,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 52,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 57,
          "column": 47
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 59,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 66,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 66,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 71,
          "column": 48
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 73,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 84,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 84,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 89,
          "column": 49
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 91,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 97,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 97,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationFilter'.",
          "line": 102,
          "column": 45
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 102,
          "column": 74
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 146,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 149,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 149,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'.",
          "line": 154,
          "column": 62
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'.",
          "line": 156,
          "column": 44
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'.",
          "line": 173,
          "column": 22
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 175,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 175,
          "column": 41
        },
        {
          "type": "error",
          "message": "Module '\"../../utils/logger\"' has no exported member 'logger'. Did you mean to use 'import logger from \"../../utils/logger\"' instead?",
          "line": 1,
          "column": 9
        },
        {
          "type": "error",
          "message": "'\"../../../types/notifications\"' has no exported member named 'isPartialNotificationPreferences'. Did you mean 'isNotificationPreferences'?",
          "line": 15,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"./batch.service\"' has no exported member 'batchService'.",
          "line": 17,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"./delivery.service\"' has no exported member 'deliveryService'.",
          "line": 18,
          "column": 9
        },
        {
          "type": "error",
          "message": "Cannot find module '../../managers/utils/LoggingManager' or its corresponding type declarations.",
          "line": 21,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type '\"web\" | NotificationChannel' is not assignable to type 'NotificationChannel'.\n  Type '\"web\"' is not assignable to type 'NotificationChannel'.",
          "line": 88,
          "column": 6
        },
        {
          "type": "error",
          "message": "No value exists in scope for the shorthand property 'userId'. Either declare one or provide an initializer.",
          "line": 198,
          "column": 8
        },
        {
          "type": "error",
          "message": "Module '\"../../utils/logger\"' has no exported member 'logger'. Did you mean to use 'import logger from \"../../utils/logger\"' instead?",
          "line": 1,
          "column": 9
        },
        {
          "type": "error",
          "message": "Cannot find module '../../managers/utils/LoggingManager' or its corresponding type declarations.",
          "line": 13,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'WebChannelConfig' is not assignable to type 'Partial<ChannelConfig>'.\n  Types of property 'desktop' are incompatible.\n    Type 'boolean' is not assignable to type 'DesktopChannelConfig'.",
          "line": 22,
          "column": 8
        },
        {
          "type": "error",
          "message": "Type 'GotifyChannelConfig' has no properties in common with type 'Partial<ChannelConfig>'.",
          "line": 31,
          "column": 8
        },
        {
          "type": "error",
          "message": "Type 'DesktopChannelConfig' has no properties in common with type 'Partial<ChannelConfig>'.",
          "line": 38,
          "column": 8
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 82,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 82,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 123,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 123,
          "column": 41
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/winston-transport/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 0,
          "column": 7
        },
        {
          "type": "error",
          "message": "'\"../../types/transports\"' has no exported member named 'FileTransportOptions'. Did you mean 'TransportOptions'?",
          "line": 10,
          "column": 2
        },
        {
          "type": "error",
          "message": "'\"../../types/transports\"' has no exported member named 'ConsoleTransportOptions'. Did you mean 'TransportOptions'?",
          "line": 11,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"../../types/transports\"' has no exported member 'DEFAULT_FILE_TRANSPORT_CONFIG'.",
          "line": 12,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"../../types/transports\"' has no exported member 'DEFAULT_CONSOLE_CONFIG'.",
          "line": 13,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find module './logging/LoggingManager' or its corresponding type declarations.",
          "line": 27,
          "column": 31
        },
        {
          "type": "error",
          "message": "Cannot find name 'consoleLoggingManager'. Did you mean 'LoggingManager'?",
          "line": 38,
          "column": 2
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 38,
          "column": 38
        },
        {
          "type": "error",
          "message": "'DEFAULT_CONSOLE_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 50,
          "column": 7
        },
        {
          "type": "error",
          "message": "'DEFAULT_FORMAT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 52,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type 'boolean | { level?: boolean; message?: boolean; colors?: { error?: string; debug?: string; info?: string; warn?: string; critical?: string; }; }' is not assignable to parameter of type 'ColorizeOptions'.\n  Type 'false' has no properties in common with type 'ColorizeOptions'.",
          "line": 52,
          "column": 22
        },
        {
          "type": "error",
          "message": "'DEFAULT_FILE_TRANSPORT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 58,
          "column": 7
        },
        {
          "type": "error",
          "message": "'DEFAULT_FORMAT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 60,
          "column": 23
        },
        {
          "type": "error",
          "message": "Type 'FormatOptions' has no properties in common with type 'TimestampOptions'.",
          "line": 60,
          "column": 23
        },
        {
          "type": "error",
          "message": "Argument of type 'GotifyTransport' is not assignable to parameter of type 'TransportStream'.\n  Type 'GotifyTransport' is missing the following properties from type 'TransportStream': _write, _final, end, destroy, and 13 more.",
          "line": 68,
          "column": 21
        },
        {
          "type": "error",
          "message": "Argument of type '{ level: \"error\"; handleExceptions: boolean; handleRejections: boolean; }' is not assignable to parameter of type 'GotifyTransportOptions'.\n  Object literal may only specify known properties, and 'handleExceptions' does not exist in type 'GotifyTransportOptions'.",
          "line": 70,
          "column": 4
        },
        {
          "type": "error",
          "message": "'DEFAULT_FORMAT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 83,
          "column": 25
        },
        {
          "type": "error",
          "message": "Type 'FormatOptions' has no properties in common with type 'TimestampOptions'.",
          "line": 83,
          "column": 25
        },
        {
          "type": "error",
          "message": "The type 'readonly [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"]' is 'readonly' and cannot be assigned to the mutable type 'string[]'.",
          "line": 165,
          "column": 6
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerNetwork'.",
          "line": 0,
          "column": 31
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerVolume'.",
          "line": 0,
          "column": 46
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerStats'.",
          "line": 0,
          "column": 60
        },
        {
          "type": "error",
          "message": "'ApiError' cannot be used as a value because it was imported using 'import type'.",
          "line": 106,
          "column": 32
        },
        {
          "type": "error",
          "message": "Expected 2-3 arguments, but got 4.",
          "line": 114,
          "column": 6
        },
        {
          "type": "error",
          "message": "Cannot assign to 'name' because it is a read-only property.",
          "line": 116,
          "column": 9
        },
        {
          "type": "error",
          "message": "This member cannot have an 'override' modifier because it is not declared in the base class 'ApiError'.",
          "line": 121,
          "column": 18
        },
        {
          "type": "error",
          "message": "Property 'toJSON' does not exist on type 'ApiError'.",
          "line": 123,
          "column": 15
        },
        {
          "type": "error",
          "message": "Cannot find module './logging' or its corresponding type declarations.",
          "line": 9,
          "column": 7
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerStats'.",
          "line": 14,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerComposeConfig'.",
          "line": 16,
          "column": 2
        }
      ]
    },
    "timestamp": 1733633464466
  },
  "src\\server\\services\\alerts\\notification.service.ts": {
    "hash": "d3db09451608821781bc9e3dea43d5ae",
    "stats": {
      "path": "src\\server\\services\\alerts\\notification.service.ts",
      "errors": 267,
      "warnings": 8,
      "messages": [
        {
          "type": "error",
          "message": "Namespace 'Intl' has no exported member 'Segmenter'.",
          "line": 42,
          "column": 25
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 12,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'PromptProps'.",
          "line": 18,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Prompt'.",
          "line": 19,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RedirectProps'.",
          "line": 22,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'Redirect'. Did you mean 'redirect'?",
          "line": 23,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteChildrenProps'.",
          "line": 24,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteComponentProps'.",
          "line": 25,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouterProps'.",
          "line": 30,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouter'.",
          "line": 31,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'SwitchProps'.",
          "line": 32,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Switch'.",
          "line": 33,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 34,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'withRouter'.",
          "line": 36,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouterChildContext'.",
          "line": 37,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'useHistory'.",
          "line": 38,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'useRouteMatch'. Did you mean 'RouteMatch'?",
          "line": 41,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"ioredis\"' has no exported member 'RedisStatus'. Did you mean to use 'import RedisStatus from \"ioredis\"' instead?",
          "line": 1,
          "column": 25
        },
        {
          "type": "error",
          "message": "Interface 'RedisClientType' incorrectly extends interface 'Redis'.\n  Types of property 'del' are incompatible.\n    Type '(key: string) => Promise<number>' is not assignable to type '{ (...args: [...keys: RedisKey[], callback: Callback<number>]): Promise<number>; (keys: RedisKey[], callback: Callback<number>): Promise<number>; (...args: RedisKey[]): Promise<...>; (keys: RedisKey[]): Promise<...>; }'.\n      Types of parameters 'key' and 'keys' are incompatible.\n        Type '[...keys: RedisKey[], callback: Callback<number>]' is not assignable to type '[key: string]'.\n          Target allows only 1 element(s) but source may have more.",
          "line": 23,
          "column": 10
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'string' is not assignable to type 'LogLevel'.",
          "line": 143,
          "column": 4
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 4,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'logger' in type 'CacheManager' is not assignable to the same property in base type 'BaseService'.\n  Type 'LoggingManager' is missing the following properties from type 'LoggerAdapter': logger, context, withContext, critical",
          "line": 34,
          "column": 21
        },
        {
          "type": "error",
          "message": "Type '{ retryOptions: { maxAttempts: number; initialDelay: number; maxDelay: number; factor: number; timeout: number; }; cacheOptions: { ttl: number; prefix: string; }; metricsEnabled: boolean; loggingEnabled: boolean; validation: { ...; }; }' has no properties in common with type 'ServiceOptions'.",
          "line": 43,
          "column": 10
        },
        {
          "type": "error",
          "message": "Module '\"path\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 1,
          "column": 7
        },
        {
          "type": "error",
          "message": "Type 'JsonValue' is not assignable to type 'JsonObject'.\n  Type 'string' is not assignable to type 'JsonObject'.",
          "line": 23,
          "column": 8
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 2,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'error' does not exist on type 'SafeParseReturnType<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"warn\" | \"info\" | \"debug\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }, { ...; }>'.\n  Property 'error' does not exist on type 'SafeParseSuccess<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"warn\" | \"info\" | \"debug\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }>'.",
          "line": 229,
          "column": 23
        },
        {
          "type": "error",
          "message": "Property 'error' does not exist on type 'SafeParseReturnType<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"warn\" | \"info\" | \"debug\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }, { ...; }>'.\n  Property 'error' does not exist on type 'SafeParseSuccess<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"warn\" | \"info\" | \"debug\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }>'.",
          "line": 233,
          "column": 25
        },
        {
          "type": "error",
          "message": "Cannot find module 'sequelize' or its corresponding type declarations.",
          "line": 5,
          "column": 55
        },
        {
          "type": "error",
          "message": "Cannot find module './SecurityManager' or its corresponding type declarations.",
          "line": 13,
          "column": 32
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 55,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 73,
          "column": 41
        },
        {
          "type": "error",
          "message": "Argument of type 'string' is not assignable to parameter of type 'never'.",
          "line": 163,
          "column": 26
        },
        {
          "type": "error",
          "message": "Property 'query' does not exist on type 'never'.",
          "line": 165,
          "column": 77
        },
        {
          "type": "error",
          "message": "Property 'params' does not exist on type 'never'.",
          "line": 165,
          "column": 98
        },
        {
          "type": "error",
          "message": "Argument of type 'string' is not assignable to parameter of type 'never'.",
          "line": 168,
          "column": 26
        },
        {
          "type": "error",
          "message": "Argument of type 'Omit<PrismaClient<PrismaClientOptions, never, DefaultArgs>, \"$connect\" | \"$disconnect\" | \"$on\" | \"$transaction\" | \"$use\" | \"$extends\">' is not assignable to parameter of type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.\n  Type 'Omit<PrismaClient<PrismaClientOptions, never, DefaultArgs>, \"$connect\" | \"$disconnect\" | \"$on\" | \"$transaction\" | \"$use\" | \"$extends\">' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 2 more.",
          "line": 316,
          "column": 31
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 322,
          "column": 42
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 347,
          "column": 44
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'DatabaseManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 382,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'emit' in type 'DatabaseManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, ...args: any[]) => void' is not assignable to type '<K>(eventName: string | symbol, ...args: AnyRest) => boolean'.\n    Type 'void' is not assignable to type 'boolean'.",
          "line": 386,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/winston/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 5,
          "column": 7
        },
        {
          "type": "error",
          "message": "Non-abstract class 'LoggingManager' does not implement all abstract members of 'BaseService'",
          "line": 56,
          "column": 13
        },
        {
          "type": "error",
          "message": "Property 'config' in type 'LoggingManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ level?: \"error\" | \"http\" | \"warn\" | \"info\" | \"debug\" | \"verbose\" | \"silly\"; format?: \"json\" | \"pretty\" | \"simple\"; console?: { enabled?: boolean; level?: \"error\" | \"http\" | \"warn\" | \"info\" | \"debug\" | \"verbose\" | \"silly\"; }; file?: { ...; }; metadata?: { ...; }; }' is missing the following properties from type 'ServiceConfig': name, version, dependencies",
          "line": 59,
          "column": 10
        },
        {
          "type": "error",
          "message": "Property 'configManager' does not exist on type 'LoggingManager'.",
          "line": 88,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'configManager' does not exist on type 'LoggingManager'.",
          "line": 96,
          "column": 33
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 108,
          "column": 58
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 114,
          "column": 57
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 120,
          "column": 59
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 126,
          "column": 64
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; }' is not assignable to parameter of type 'string'.",
          "line": 133,
          "column": 57
        },
        {
          "type": "error",
          "message": "Property 'initializeMetrics' does not exist on type 'LoggingManager'.",
          "line": 148,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'file' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 154,
          "column": 31
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 304,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 324,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'name' does not exist on type 'LoggingManager'.",
          "line": 354,
          "column": 28
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 355,
          "column": 28
        },
        {
          "type": "error",
          "message": "Cannot find module '../security/SecurityManager' or its corresponding type declarations.",
          "line": 4,
          "column": 32
        },
        {
          "type": "error",
          "message": "Cannot find module './FileSystemManager' or its corresponding type declarations.",
          "line": 10,
          "column": 34
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 1,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'metrics' in type 'MetricsManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ httpRequestDuration: Histogram<\"method\" | \"route\" | \"status_code\">; apiErrors: Counter<\"method\" | \"route\" | \"error_type\">; operationDuration: Histogram<\"success\" | \"operation\" | \"service\">; ... 8 more ...; incrementApiError: (method: string, route: string, errorType: string) => void; }' is missing the following properties from type 'MetricsManager': registry, metricStore, metrics, getRegistry, and 43 more.",
          "line": 35,
          "column": 30
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/service.types' or its corresponding type declarations.",
          "line": 14,
          "column": 45
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 73,
          "column": 1
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 104,
          "column": 6
        },
        {
          "type": "error",
          "message": "Cannot assign to 'config' because it is a read-only property.",
          "line": 136,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'healthCheckMetric' because it is a read-only property.",
          "line": 139,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'failingHealthCheckMetric' because it is a read-only property.",
          "line": 140,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'alertMetric' because it is a read-only property.",
          "line": 141,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'unacknowledgedAlertMetric' because it is a read-only property.",
          "line": 142,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'checkDurationMetric' because it is a read-only property.",
          "line": 143,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'alertSeverityMetric' because it is a read-only property.",
          "line": 144,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'MonitoringManager' is not assignable to the same property in base type 'BaseService'.\n  Type '<K extends keyof MonitoringEvents>(event: K, listener: MonitoringEvents[K]) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 434,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'MonitoringManager' is not assignable to the same property in base type 'BaseService'.\n  Type '<K extends keyof MonitoringEvents>(event: K, listener: MonitoringEvents[K]) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 441,
          "column": 9
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 449,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 457,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 465,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 473,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 481,
          "column": 48
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 490,
          "column": 44
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/error' or its corresponding type declarations.",
          "line": 13,
          "column": 25
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 37,
          "column": 6
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 99,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 100,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'hashIdentifier' does not exist on type 'SecurityManager'.",
          "line": 159,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 161,
          "column": 48
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 165,
          "column": 78
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 166,
          "column": 52
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 170,
          "column": 33
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 171,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 199,
          "column": 28
        },
        {
          "type": "error",
          "message": "Expected 4 arguments, but got 0.",
          "line": 272,
          "column": 30
        },
        {
          "type": "error",
          "message": "Module '\"./services/MetricsService\"' has no exported member 'MetricsService'.",
          "line": 11,
          "column": 9
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 17,
          "column": 1
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 59,
          "column": 24
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 60,
          "column": 27
        },
        {
          "type": "error",
          "message": "Expected 0 arguments, but got 1.",
          "line": 62,
          "column": 51
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 71,
          "column": 38
        },
        {
          "type": "error",
          "message": "Spread types may only be created from object types.",
          "line": 88,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 1.",
          "line": 121,
          "column": 29
        },
        {
          "type": "error",
          "message": "Property 'verifyToken' does not exist on type 'TokenService'.",
          "line": 125,
          "column": 29
        },
        {
          "type": "error",
          "message": "Property 'validate' does not exist on type 'PasswordValidator'. Did you mean to access the static member 'PasswordValidator.validate' instead?",
          "line": 137,
          "column": 34
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 83,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 84,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 85,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 86,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 87,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 11,
          "column": 50
        },
        {
          "type": "error",
          "message": "Property 'bcryptSaltRounds' does not exist on type 'JsonValue'.\n  Property 'bcryptSaltRounds' does not exist on type 'string'.",
          "line": 11,
          "column": 72
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 20,
          "column": 46
        },
        {
          "type": "error",
          "message": "Property 'passwordPolicy' does not exist on type 'JsonValue'.\n  Property 'passwordPolicy' does not exist on type 'string'.",
          "line": 20,
          "column": 68
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/@types/ms/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 1,
          "column": 7
        },
        {
          "type": "error",
          "message": "Property 'getJwtSecret' does not exist on type 'ConfigManager'.",
          "line": 16,
          "column": 25
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 17,
          "column": 38
        },
        {
          "type": "error",
          "message": "Property 'jwtExpiresIn' does not exist on type 'JsonValue'.\n  Property 'jwtExpiresIn' does not exist on type 'string'.",
          "line": 17,
          "column": 60
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 20,
          "column": 57
        },
        {
          "type": "error",
          "message": "Property 'jwtExpiresIn' does not exist on type 'JsonValue'.\n  Property 'jwtExpiresIn' does not exist on type 'string'.",
          "line": 20,
          "column": 79
        },
        {
          "type": "error",
          "message": "Property 'getJwtSecret' does not exist on type 'ConfigManager'.",
          "line": 33,
          "column": 55
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/service.types' or its corresponding type declarations.",
          "line": 9,
          "column": 45
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 44,
          "column": 1
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 71,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 120,
          "column": 74
        },
        {
          "type": "error",
          "message": "Property 'cleanup' is protected and only accessible through an instance of class 'ServiceManager'. This is an instance of class 'BaseService'.",
          "line": 191,
          "column": 24
        },
        {
          "type": "error",
          "message": "Type 'ConfigOperationResult<any[]>' must have a '[Symbol.iterator]()' method that returns an iterator.",
          "line": 214,
          "column": 27
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 43,
          "column": 6
        },
        {
          "type": "error",
          "message": "Property 'url' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 57,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'retryAttempts' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 59,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'retryDelay' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 60,
          "column": 32
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n      Property '[Symbol.dispose]' is missing in type 'Timer' but required in type 'Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 113,
          "column": 22
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 3, '(callback: () => void, ms?: number): Timeout', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.\n  Overload 2 of 3, '(callback: (args: void) => void, ms?: number): Timeout', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.\n  Overload 3 of 3, '(handler: TimerHandler, timeout?: number, ...arguments: any[]): number', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.",
          "line": 165,
          "column": 7
        },
        {
          "type": "error",
          "message": "Expected 1-2 arguments, but got 3.",
          "line": 204,
          "column": 9
        },
        {
          "type": "error",
          "message": "No value exists in scope for the shorthand property 'namespace'. Either declare one or provide an initializer.",
          "line": 294,
          "column": 61
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'StateManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: unknown[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 300,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'StateManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: unknown[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 304,
          "column": 9
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 309,
          "column": 28
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 68,
          "column": 6
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 129,
          "column": 22
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 132,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 326,
          "column": 19
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 348,
          "column": 19
        },
        {
          "type": "error",
          "message": "Argument of type '\"failed\" | \"running\" | \"pending\" | \"completed\" | \"cancelled\" | \"retrying\"' is not assignable to parameter of type 'TaskStatus'.\n  Type '\"failed\"' is not assignable to type 'TaskStatus'.",
          "line": 408,
          "column": 17
        },
        {
          "type": "error",
          "message": "Argument of type '\"failed\" | \"running\" | \"pending\" | \"completed\" | \"cancelled\" | \"retrying\"' is not assignable to parameter of type 'TaskStatus'.",
          "line": 408,
          "column": 42
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'TaskManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 514,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'TaskManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 518,
          "column": 9
        },
        {
          "type": "error",
          "message": "Cannot find module './SecurityManager' or its corresponding type declarations.",
          "line": 12,
          "column": 32
        },
        {
          "type": "error",
          "message": "Property 'config' in type 'WebSocketManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ cors?: { origins?: string[]; methods?: string[]; }; connectionTimeout?: number; maxConnections?: number; }' is missing the following properties from type 'ServiceConfig': name, version, dependencies",
          "line": 45,
          "column": 10
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 79,
          "column": 67
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; }' is not assignable to parameter of type 'string'.",
          "line": 97,
          "column": 60
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 102,
          "column": 59
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 108,
          "column": 57
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 114,
          "column": 72
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'WebSocketManager'.",
          "line": 164,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'WebSocketManager'.",
          "line": 178,
          "column": 22
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 9,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'number' has no properties in common with type 'Partial<Record<\"success\" | \"operation\" | \"service\", string | number>>'.",
          "line": 180,
          "column": 30
        },
        {
          "type": "error",
          "message": "Cannot find module '../managers/utils/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:connected\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 38,
          "column": 18
        },
        {
          "type": "error",
          "message": "Cannot assign to 'agentId' because it is a read-only property.",
          "line": 80,
          "column": 16
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 95,
          "column": 16
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:metrics\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 105,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 115,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:heartbeat\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 131,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:stream\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 146,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:new\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 169,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:error\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 187,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 224,
          "column": 24
        },
        {
          "type": "error",
          "message": "Cannot find module '../../../types/notifications.types' or its corresponding type declarations.",
          "line": 3,
          "column": 33
        },
        {
          "type": "error",
          "message": "Type '\"alert\"' is not assignable to type 'NotificationType'.",
          "line": 19,
          "column": 8
        },
        {
          "type": "error",
          "message": "Argument of type '{ metricsEnabled: boolean; loggingEnabled: boolean; validation: { strict: boolean; }; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'metricsEnabled' does not exist in type 'ServiceOptions'.",
          "line": 67,
          "column": 6
        },
        {
          "type": "error",
          "message": "This member cannot have an 'override' modifier because it is not declared in the base class 'BaseService'. Did you mean 'metrics'?",
          "line": 75,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'getMetrics' does not exist on type 'BaseService'. Did you mean 'metrics'?",
          "line": 76,
          "column": 30
        },
        {
          "type": "error",
          "message": "Type 'void' is not assignable to type 'DockerCommandResult'.",
          "line": 221,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"../../utils/logger\"' has no exported member 'logger'. Did you mean to use 'import logger from \"../../utils/logger\"' instead?",
          "line": 1,
          "column": 9
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 4,
          "column": 0
        },
        {
          "type": "error",
          "message": "',' expected.",
          "line": 4,
          "column": 7
        },
        {
          "type": "error",
          "message": "String literal expected.",
          "line": 4,
          "column": 7
        },
        {
          "type": "error",
          "message": "';' expected.",
          "line": 4,
          "column": 26
        },
        {
          "type": "error",
          "message": "Cannot find name 'from'.",
          "line": 4,
          "column": 26
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'. Did you mean 'Notification'?",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Left side of comma operator is unused and has no side effects.",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Left side of comma operator is unused and has no side effects.",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Left side of comma operator is unused and has no side effects.",
          "line": 5,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationFilter'. Did you mean 'Notification'?",
          "line": 6,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'. Did you mean 'Notification'?",
          "line": 7,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'ServiceStatus'.",
          "line": 8,
          "column": 2
        },
        {
          "type": "error",
          "message": "Declaration or statement expected.",
          "line": 9,
          "column": 0
        },
        {
          "type": "error",
          "message": "Unexpected keyword or identifier.",
          "line": 9,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'from'.",
          "line": 9,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'. Did you mean 'Notification'?",
          "line": 12,
          "column": 29
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'. Did you mean 'Notification'?",
          "line": 12,
          "column": 58
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'. Did you mean 'Notification'?",
          "line": 14,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 34,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 34,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 39,
          "column": 52
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 41,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 52,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 52,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 57,
          "column": 47
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 59,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 66,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 66,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 71,
          "column": 48
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 73,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 84,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 84,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 89,
          "column": 49
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 91,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 97,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 97,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationFilter'.",
          "line": 102,
          "column": 45
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 102,
          "column": 74
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationEntity'.",
          "line": 146,
          "column": 36
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 149,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 149,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'.",
          "line": 154,
          "column": 62
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'.",
          "line": 156,
          "column": 44
        },
        {
          "type": "error",
          "message": "Cannot find name 'NotificationType'.",
          "line": 173,
          "column": 22
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 175,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 175,
          "column": 41
        },
        {
          "type": "error",
          "message": "Module '\"../../utils/logger\"' has no exported member 'logger'. Did you mean to use 'import logger from \"../../utils/logger\"' instead?",
          "line": 1,
          "column": 9
        },
        {
          "type": "error",
          "message": "'\"../../../types/notifications\"' has no exported member named 'isPartialNotificationPreferences'. Did you mean 'isNotificationPreferences'?",
          "line": 15,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"./batch.service\"' has no exported member 'batchService'.",
          "line": 17,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"./delivery.service\"' has no exported member 'deliveryService'.",
          "line": 18,
          "column": 9
        },
        {
          "type": "error",
          "message": "Cannot find module '../../managers/utils/LoggingManager' or its corresponding type declarations.",
          "line": 21,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type '\"web\" | NotificationChannel' is not assignable to type 'NotificationChannel'.\n  Type '\"web\"' is not assignable to type 'NotificationChannel'.",
          "line": 88,
          "column": 6
        },
        {
          "type": "error",
          "message": "No value exists in scope for the shorthand property 'userId'. Either declare one or provide an initializer.",
          "line": 198,
          "column": 8
        },
        {
          "type": "error",
          "message": "Module '\"../../utils/logger\"' has no exported member 'logger'. Did you mean to use 'import logger from \"../../utils/logger\"' instead?",
          "line": 1,
          "column": 9
        },
        {
          "type": "error",
          "message": "Cannot find module '../../managers/utils/LoggingManager' or its corresponding type declarations.",
          "line": 13,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'WebChannelConfig' is not assignable to type 'Partial<ChannelConfig>'.\n  Types of property 'desktop' are incompatible.\n    Type 'boolean' is not assignable to type 'DesktopChannelConfig'.",
          "line": 22,
          "column": 8
        },
        {
          "type": "error",
          "message": "Type 'GotifyChannelConfig' has no properties in common with type 'Partial<ChannelConfig>'.",
          "line": 31,
          "column": 8
        },
        {
          "type": "error",
          "message": "Type 'DesktopChannelConfig' has no properties in common with type 'Partial<ChannelConfig>'.",
          "line": 38,
          "column": 8
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 82,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 82,
          "column": 41
        },
        {
          "type": "error",
          "message": "Cannot find name 'loggerLoggingManager'.",
          "line": 123,
          "column": 6
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 123,
          "column": 41
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/winston-transport/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 0,
          "column": 7
        },
        {
          "type": "error",
          "message": "'\"../../types/transports\"' has no exported member named 'FileTransportOptions'. Did you mean 'TransportOptions'?",
          "line": 10,
          "column": 2
        },
        {
          "type": "error",
          "message": "'\"../../types/transports\"' has no exported member named 'ConsoleTransportOptions'. Did you mean 'TransportOptions'?",
          "line": 11,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"../../types/transports\"' has no exported member 'DEFAULT_FILE_TRANSPORT_CONFIG'.",
          "line": 12,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"../../types/transports\"' has no exported member 'DEFAULT_CONSOLE_CONFIG'.",
          "line": 13,
          "column": 2
        },
        {
          "type": "error",
          "message": "Cannot find module './logging/LoggingManager' or its corresponding type declarations.",
          "line": 27,
          "column": 31
        },
        {
          "type": "error",
          "message": "Cannot find name 'consoleLoggingManager'. Did you mean 'LoggingManager'?",
          "line": 38,
          "column": 2
        },
        {
          "type": "error",
          "message": "Identifier expected.",
          "line": 38,
          "column": 38
        },
        {
          "type": "error",
          "message": "'DEFAULT_CONSOLE_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 50,
          "column": 7
        },
        {
          "type": "error",
          "message": "'DEFAULT_FORMAT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 52,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type 'boolean | { level?: boolean; message?: boolean; colors?: { error?: string; warn?: string; info?: string; debug?: string; critical?: string; }; }' is not assignable to parameter of type 'ColorizeOptions'.\n  Type 'false' has no properties in common with type 'ColorizeOptions'.",
          "line": 52,
          "column": 22
        },
        {
          "type": "error",
          "message": "'DEFAULT_FILE_TRANSPORT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 58,
          "column": 7
        },
        {
          "type": "error",
          "message": "'DEFAULT_FORMAT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 60,
          "column": 23
        },
        {
          "type": "error",
          "message": "Type 'FormatOptions' has no properties in common with type 'TimestampOptions'.",
          "line": 60,
          "column": 23
        },
        {
          "type": "error",
          "message": "Argument of type 'GotifyTransport' is not assignable to parameter of type 'TransportStream'.\n  Type 'GotifyTransport' is missing the following properties from type 'TransportStream': _write, _final, end, destroy, and 13 more.",
          "line": 68,
          "column": 21
        },
        {
          "type": "error",
          "message": "Argument of type '{ level: \"error\"; handleExceptions: boolean; handleRejections: boolean; }' is not assignable to parameter of type 'GotifyTransportOptions'.\n  Object literal may only specify known properties, and 'handleExceptions' does not exist in type 'GotifyTransportOptions'.",
          "line": 70,
          "column": 4
        },
        {
          "type": "error",
          "message": "'DEFAULT_FORMAT_CONFIG' cannot be used as a value because it was imported using 'import type'.",
          "line": 83,
          "column": 25
        },
        {
          "type": "error",
          "message": "Type 'FormatOptions' has no properties in common with type 'TimestampOptions'.",
          "line": 83,
          "column": 25
        },
        {
          "type": "error",
          "message": "The type 'readonly [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"]' is 'readonly' and cannot be assigned to the mutable type 'string[]'.",
          "line": 165,
          "column": 6
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerNetwork'.",
          "line": 0,
          "column": 31
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerVolume'.",
          "line": 0,
          "column": 46
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerStats'.",
          "line": 0,
          "column": 60
        },
        {
          "type": "error",
          "message": "'ApiError' cannot be used as a value because it was imported using 'import type'.",
          "line": 106,
          "column": 32
        },
        {
          "type": "error",
          "message": "Expected 2-3 arguments, but got 4.",
          "line": 114,
          "column": 6
        },
        {
          "type": "error",
          "message": "Cannot assign to 'name' because it is a read-only property.",
          "line": 116,
          "column": 9
        },
        {
          "type": "error",
          "message": "This member cannot have an 'override' modifier because it is not declared in the base class 'ApiError'.",
          "line": 121,
          "column": 18
        },
        {
          "type": "error",
          "message": "Property 'toJSON' does not exist on type 'ApiError'.",
          "line": 123,
          "column": 15
        },
        {
          "type": "error",
          "message": "Cannot find module './logging' or its corresponding type declarations.",
          "line": 9,
          "column": 7
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerStats'.",
          "line": 14,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerComposeConfig'.",
          "line": 16,
          "column": 2
        },
        {
          "type": "warning",
          "message": "'MetricsAlert' is defined but never used.",
          "line": 3,
          "column": 10,
          "rule": "@typescript-eslint/no-unused-vars"
        },
        {
          "type": "error",
          "message": "Async method 'sendNotification' has no 'await' expression.",
          "line": 34,
          "column": 3,
          "rule": "@typescript-eslint/require-await"
        },
        {
          "type": "warning",
          "message": "Unsafe member access .instance on an `any` value.",
          "line": 45,
          "column": 10,
          "rule": "@typescript-eslint/no-unsafe-member-access"
        },
        {
          "type": "warning",
          "message": "Unexpected any. Specify a different type.",
          "line": 45,
          "column": 39,
          "rule": "@typescript-eslint/no-explicit-any"
        },
        {
          "type": "warning",
          "message": "Unsafe member access .instance on an `any` value.",
          "line": 46,
          "column": 7,
          "rule": "@typescript-eslint/no-unsafe-member-access"
        },
        {
          "type": "warning",
          "message": "Unexpected any. Specify a different type.",
          "line": 46,
          "column": 36,
          "rule": "@typescript-eslint/no-explicit-any"
        },
        {
          "type": "warning",
          "message": "Unsafe return of an `any` typed value.",
          "line": 48,
          "column": 5,
          "rule": "@typescript-eslint/no-unsafe-return"
        },
        {
          "type": "warning",
          "message": "Unsafe member access .instance on an `any` value.",
          "line": 48,
          "column": 12,
          "rule": "@typescript-eslint/no-unsafe-member-access"
        },
        {
          "type": "warning",
          "message": "Unexpected any. Specify a different type.",
          "line": 48,
          "column": 41,
          "rule": "@typescript-eslint/no-explicit-any"
        }
      ]
    },
    "timestamp": 1733633472480
  },
  "src\\server\\services\\alerts\\rules.service.ts": {
    "hash": "7bf5549a71cda96236f432c403d92e27",
    "stats": {
      "path": "src\\server\\services\\alerts\\rules.service.ts",
      "errors": 186,
      "warnings": 0,
      "messages": [
        {
          "type": "error",
          "message": "Namespace 'Intl' has no exported member 'Segmenter'.",
          "line": 42,
          "column": 25
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 12,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'PromptProps'.",
          "line": 18,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Prompt'.",
          "line": 19,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RedirectProps'.",
          "line": 22,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'Redirect'. Did you mean 'redirect'?",
          "line": 23,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteChildrenProps'.",
          "line": 24,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouteComponentProps'.",
          "line": 25,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouterProps'.",
          "line": 30,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'StaticRouter'.",
          "line": 31,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'SwitchProps'.",
          "line": 32,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'Switch'.",
          "line": 33,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'match'. Did you mean 'UIMatch'?",
          "line": 34,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'withRouter'.",
          "line": 36,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'RouterChildContext'.",
          "line": 37,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"react-router\"' has no exported member 'useHistory'.",
          "line": 38,
          "column": 4
        },
        {
          "type": "error",
          "message": "'\"react-router\"' has no exported member named 'useRouteMatch'. Did you mean 'RouteMatch'?",
          "line": 41,
          "column": 4
        },
        {
          "type": "error",
          "message": "Module '\"ioredis\"' has no exported member 'RedisStatus'. Did you mean to use 'import RedisStatus from \"ioredis\"' instead?",
          "line": 1,
          "column": 25
        },
        {
          "type": "error",
          "message": "Interface 'RedisClientType' incorrectly extends interface 'Redis'.\n  Types of property 'del' are incompatible.\n    Type '(key: string) => Promise<number>' is not assignable to type '{ (...args: [...keys: RedisKey[], callback: Callback<number>]): Promise<number>; (keys: RedisKey[], callback: Callback<number>): Promise<number>; (...args: RedisKey[]): Promise<...>; (keys: RedisKey[]): Promise<...>; }'.\n      Types of parameters 'key' and 'keys' are incompatible.\n        Type '[...keys: RedisKey[], callback: Callback<number>]' is not assignable to type '[key: string]'.\n          Target allows only 1 element(s) but source may have more.",
          "line": 23,
          "column": 10
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'string' is not assignable to type 'LogLevel'.",
          "line": 143,
          "column": 4
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 4,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'logger' in type 'CacheManager' is not assignable to the same property in base type 'BaseService'.\n  Type 'LoggingManager' is missing the following properties from type 'LoggerAdapter': logger, context, withContext, critical",
          "line": 34,
          "column": 21
        },
        {
          "type": "error",
          "message": "Type '{ retryOptions: { maxAttempts: number; initialDelay: number; maxDelay: number; factor: number; timeout: number; }; cacheOptions: { ttl: number; prefix: string; }; metricsEnabled: boolean; loggingEnabled: boolean; validation: { ...; }; }' has no properties in common with type 'ServiceOptions'.",
          "line": 43,
          "column": 10
        },
        {
          "type": "error",
          "message": "Module '\"path\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 1,
          "column": 7
        },
        {
          "type": "error",
          "message": "Type 'JsonValue' is not assignable to type 'JsonObject'.\n  Type 'string' is not assignable to type 'JsonObject'.",
          "line": 23,
          "column": 8
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 2,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'error' does not exist on type 'SafeParseReturnType<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }, { ...; }>'.\n  Property 'error' does not exist on type 'SafeParseSuccess<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }>'.",
          "line": 229,
          "column": 23
        },
        {
          "type": "error",
          "message": "Property 'error' does not exist on type 'SafeParseReturnType<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }, { ...; }>'.\n  Property 'error' does not exist on type 'SafeParseSuccess<{ server?: { port?: number; host?: string; environment?: \"development\" | \"production\" | \"test\"; debug?: boolean; }; logging?: { level?: \"error\" | \"debug\" | \"info\" | \"warn\"; format?: \"json\" | \"simple\"; enabled?: boolean; }; metrics?: { ...; }; security?: { ...; }; }>'.",
          "line": 233,
          "column": 25
        },
        {
          "type": "error",
          "message": "Cannot find module 'sequelize' or its corresponding type declarations.",
          "line": 5,
          "column": 55
        },
        {
          "type": "error",
          "message": "Cannot find module './SecurityManager' or its corresponding type declarations.",
          "line": 13,
          "column": 32
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 55,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 73,
          "column": 41
        },
        {
          "type": "error",
          "message": "Argument of type 'string' is not assignable to parameter of type 'never'.",
          "line": 163,
          "column": 26
        },
        {
          "type": "error",
          "message": "Property 'query' does not exist on type 'never'.",
          "line": 165,
          "column": 77
        },
        {
          "type": "error",
          "message": "Property 'params' does not exist on type 'never'.",
          "line": 165,
          "column": 98
        },
        {
          "type": "error",
          "message": "Argument of type 'string' is not assignable to parameter of type 'never'.",
          "line": 168,
          "column": 26
        },
        {
          "type": "error",
          "message": "Argument of type 'Omit<PrismaClient<PrismaClientOptions, never, DefaultArgs>, \"$connect\" | \"$disconnect\" | \"$on\" | \"$transaction\" | \"$use\" | \"$extends\">' is not assignable to parameter of type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.\n  Type 'Omit<PrismaClient<PrismaClientOptions, never, DefaultArgs>, \"$connect\" | \"$disconnect\" | \"$on\" | \"$transaction\" | \"$use\" | \"$extends\">' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 2 more.",
          "line": 316,
          "column": 31
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 322,
          "column": 42
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 347,
          "column": 44
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'DatabaseManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 382,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'emit' in type 'DatabaseManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, ...args: any[]) => void' is not assignable to type '<K>(eventName: string | symbol, ...args: AnyRest) => boolean'.\n    Type 'void' is not assignable to type 'boolean'.",
          "line": 386,
          "column": 9
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/winston/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 5,
          "column": 7
        },
        {
          "type": "error",
          "message": "Non-abstract class 'LoggingManager' does not implement all abstract members of 'BaseService'",
          "line": 56,
          "column": 13
        },
        {
          "type": "error",
          "message": "Property 'config' in type 'LoggingManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ level?: \"error\" | \"http\" | \"debug\" | \"info\" | \"warn\" | \"verbose\" | \"silly\"; format?: \"json\" | \"pretty\" | \"simple\"; console?: { enabled?: boolean; level?: \"error\" | \"http\" | \"debug\" | \"info\" | \"warn\" | \"verbose\" | \"silly\"; }; file?: { ...; }; metadata?: { ...; }; }' is missing the following properties from type 'ServiceConfig': name, version, dependencies",
          "line": 59,
          "column": 10
        },
        {
          "type": "error",
          "message": "Property 'configManager' does not exist on type 'LoggingManager'.",
          "line": 88,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'configManager' does not exist on type 'LoggingManager'.",
          "line": 96,
          "column": 33
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 108,
          "column": 58
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 114,
          "column": 57
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 120,
          "column": 59
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 126,
          "column": 64
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; }' is not assignable to parameter of type 'string'.",
          "line": 133,
          "column": 57
        },
        {
          "type": "error",
          "message": "Property 'initializeMetrics' does not exist on type 'LoggingManager'.",
          "line": 148,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'file' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 154,
          "column": 31
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 304,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 324,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'name' does not exist on type 'LoggingManager'.",
          "line": 354,
          "column": 28
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'LoggingManager'.",
          "line": 355,
          "column": 28
        },
        {
          "type": "error",
          "message": "Cannot find module '../security/SecurityManager' or its corresponding type declarations.",
          "line": 4,
          "column": 32
        },
        {
          "type": "error",
          "message": "Cannot find module './FileSystemManager' or its corresponding type declarations.",
          "line": 10,
          "column": 34
        },
        {
          "type": "error",
          "message": "Module '\"../services/base.service\"' has no exported member 'ServiceConfig'.",
          "line": 1,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'metrics' in type 'MetricsManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ httpRequestDuration: Histogram<\"method\" | \"route\" | \"status_code\">; apiErrors: Counter<\"method\" | \"route\" | \"error_type\">; operationDuration: Histogram<\"success\" | \"operation\" | \"service\">; ... 8 more ...; incrementApiError: (method: string, route: string, errorType: string) => void; }' is missing the following properties from type 'MetricsManager': registry, metricStore, metrics, getRegistry, and 43 more.",
          "line": 35,
          "column": 30
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/service.types' or its corresponding type declarations.",
          "line": 14,
          "column": 45
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 73,
          "column": 1
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 104,
          "column": 6
        },
        {
          "type": "error",
          "message": "Cannot assign to 'config' because it is a read-only property.",
          "line": 136,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'healthCheckMetric' because it is a read-only property.",
          "line": 139,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'failingHealthCheckMetric' because it is a read-only property.",
          "line": 140,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'alertMetric' because it is a read-only property.",
          "line": 141,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'unacknowledgedAlertMetric' because it is a read-only property.",
          "line": 142,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'checkDurationMetric' because it is a read-only property.",
          "line": 143,
          "column": 11
        },
        {
          "type": "error",
          "message": "Cannot assign to 'alertSeverityMetric' because it is a read-only property.",
          "line": 144,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'MonitoringManager' is not assignable to the same property in base type 'BaseService'.\n  Type '<K extends keyof MonitoringEvents>(event: K, listener: MonitoringEvents[K]) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 434,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'MonitoringManager' is not assignable to the same property in base type 'BaseService'.\n  Type '<K extends keyof MonitoringEvents>(event: K, listener: MonitoringEvents[K]) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 441,
          "column": 9
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 449,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 457,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 465,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 473,
          "column": 44
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 481,
          "column": 48
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 490,
          "column": 44
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/error' or its corresponding type declarations.",
          "line": 13,
          "column": 25
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 37,
          "column": 6
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 99,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<JsonValue>'.",
          "line": 100,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'hashIdentifier' does not exist on type 'SecurityManager'.",
          "line": 159,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 161,
          "column": 48
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 165,
          "column": 78
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 166,
          "column": 52
        },
        {
          "type": "error",
          "message": "Property 'maxRequests' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 170,
          "column": 33
        },
        {
          "type": "error",
          "message": "Property 'windowMs' does not exist on type 'ConfigOperationResult<{ maxRequests: number; windowMs: number; }>'.",
          "line": 171,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 199,
          "column": 28
        },
        {
          "type": "error",
          "message": "Expected 4 arguments, but got 0.",
          "line": 272,
          "column": 30
        },
        {
          "type": "error",
          "message": "Module '\"./services/MetricsService\"' has no exported member 'MetricsService'.",
          "line": 11,
          "column": 9
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 17,
          "column": 1
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 59,
          "column": 24
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 60,
          "column": 27
        },
        {
          "type": "error",
          "message": "Expected 0 arguments, but got 1.",
          "line": 62,
          "column": 51
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 71,
          "column": 38
        },
        {
          "type": "error",
          "message": "Spread types may only be created from object types.",
          "line": 88,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 1.",
          "line": 121,
          "column": 29
        },
        {
          "type": "error",
          "message": "Property 'verifyToken' does not exist on type 'TokenService'.",
          "line": 125,
          "column": 29
        },
        {
          "type": "error",
          "message": "Property 'validate' does not exist on type 'PasswordValidator'. Did you mean to access the static member 'PasswordValidator.validate' instead?",
          "line": 137,
          "column": 34
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 83,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 84,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 85,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 86,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'MetricObjectWithValues<MetricValue<string>>' is not assignable to type 'number'.",
          "line": 87,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 11,
          "column": 50
        },
        {
          "type": "error",
          "message": "Property 'bcryptSaltRounds' does not exist on type 'JsonValue'.\n  Property 'bcryptSaltRounds' does not exist on type 'string'.",
          "line": 11,
          "column": 72
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 20,
          "column": 46
        },
        {
          "type": "error",
          "message": "Property 'passwordPolicy' does not exist on type 'JsonValue'.\n  Property 'passwordPolicy' does not exist on type 'string'.",
          "line": 20,
          "column": 68
        },
        {
          "type": "error",
          "message": "Module '\"c:/Users/jmaga/code/dash/node_modules/@types/ms/index\"' can only be default-imported using the 'esModuleInterop' flag",
          "line": 1,
          "column": 7
        },
        {
          "type": "error",
          "message": "Property 'getJwtSecret' does not exist on type 'ConfigManager'.",
          "line": 16,
          "column": 25
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 17,
          "column": 38
        },
        {
          "type": "error",
          "message": "Property 'jwtExpiresIn' does not exist on type 'JsonValue'.\n  Property 'jwtExpiresIn' does not exist on type 'string'.",
          "line": 17,
          "column": 60
        },
        {
          "type": "error",
          "message": "Expected 2 arguments, but got 1.",
          "line": 20,
          "column": 57
        },
        {
          "type": "error",
          "message": "Property 'jwtExpiresIn' does not exist on type 'JsonValue'.\n  Property 'jwtExpiresIn' does not exist on type 'string'.",
          "line": 20,
          "column": 79
        },
        {
          "type": "error",
          "message": "Property 'getJwtSecret' does not exist on type 'ConfigManager'.",
          "line": 33,
          "column": 55
        },
        {
          "type": "error",
          "message": "Cannot find module '../types/service.types' or its corresponding type declarations.",
          "line": 9,
          "column": 45
        },
        {
          "type": "error",
          "message": "Unable to resolve signature of class decorator when called as an expression.\n  The runtime will invoke the decorator with 2 arguments, but the decorator expects 1.",
          "line": 44,
          "column": 1
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; dependencies: string[]; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 71,
          "column": 6
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 120,
          "column": 74
        },
        {
          "type": "error",
          "message": "Property 'cleanup' is protected and only accessible through an instance of class 'ServiceManager'. This is an instance of class 'BaseService'.",
          "line": 191,
          "column": 24
        },
        {
          "type": "error",
          "message": "Type 'ConfigOperationResult<any[]>' must have a '[Symbol.iterator]()' method that returns an iterator.",
          "line": 214,
          "column": 27
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 43,
          "column": 6
        },
        {
          "type": "error",
          "message": "Property 'url' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 57,
          "column": 39
        },
        {
          "type": "error",
          "message": "Property 'retryAttempts' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 59,
          "column": 36
        },
        {
          "type": "error",
          "message": "Property 'retryDelay' does not exist on type 'ConfigOperationResult<{ url: string; retryAttempts: number; retryDelay: number; }>'.",
          "line": 60,
          "column": 32
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n      Property '[Symbol.dispose]' is missing in type 'Timer' but required in type 'Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 113,
          "column": 22
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 3, '(callback: () => void, ms?: number): Timeout', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.\n  Overload 2 of 3, '(callback: (args: void) => void, ms?: number): Timeout', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.\n  Overload 3 of 3, '(handler: TimerHandler, timeout?: number, ...arguments: any[]): number', gave the following error.\n    Argument of type 'ConfigOperationResult<60000>' is not assignable to parameter of type 'number'.",
          "line": 165,
          "column": 7
        },
        {
          "type": "error",
          "message": "Expected 1-2 arguments, but got 3.",
          "line": 204,
          "column": 9
        },
        {
          "type": "error",
          "message": "No value exists in scope for the shorthand property 'namespace'. Either declare one or provide an initializer.",
          "line": 294,
          "column": 61
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'StateManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: unknown[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 300,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'StateManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: unknown[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 304,
          "column": 9
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 309,
          "column": 28
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; version: string; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'version' does not exist in type 'ServiceOptions'.",
          "line": 68,
          "column": 6
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 129,
          "column": 22
        },
        {
          "type": "error",
          "message": "No overload matches this call.\n  Overload 1 of 2, '(intervalId: string | number | Timeout): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'string | number | Timeout'.\n  Overload 2 of 2, '(id: number): void', gave the following error.\n    Argument of type 'Timer' is not assignable to parameter of type 'number'.",
          "line": 132,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 326,
          "column": 19
        },
        {
          "type": "error",
          "message": "Property 'observeHistogram' does not exist on type 'MetricsManager'.",
          "line": 348,
          "column": 19
        },
        {
          "type": "error",
          "message": "Argument of type '\"failed\" | \"running\" | \"pending\" | \"completed\" | \"cancelled\" | \"retrying\"' is not assignable to parameter of type 'TaskStatus'.\n  Type '\"failed\"' is not assignable to type 'TaskStatus'.",
          "line": 408,
          "column": 17
        },
        {
          "type": "error",
          "message": "Argument of type '\"failed\" | \"running\" | \"pending\" | \"completed\" | \"cancelled\" | \"retrying\"' is not assignable to parameter of type 'TaskStatus'.",
          "line": 408,
          "column": 42
        },
        {
          "type": "error",
          "message": "Property 'on' in type 'TaskManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 514,
          "column": 9
        },
        {
          "type": "error",
          "message": "Property 'off' in type 'TaskManager' is not assignable to the same property in base type 'BaseService'.\n  Type '(event: string, listener: (...args: any[]) => void) => void' is not assignable to type '<K>(eventName: string | symbol, listener: (...args: any[]) => void) => this'.\n    Type 'void' is not assignable to type 'this'.\n      'this' could be instantiated with an arbitrary type which could be unrelated to 'void'.",
          "line": 518,
          "column": 9
        },
        {
          "type": "error",
          "message": "Cannot find module './SecurityManager' or its corresponding type declarations.",
          "line": 12,
          "column": 32
        },
        {
          "type": "error",
          "message": "Property 'config' in type 'WebSocketManager' is not assignable to the same property in base type 'BaseService'.\n  Type '{ cors?: { origins?: string[]; methods?: string[]; }; connectionTimeout?: number; maxConnections?: number; }' is missing the following properties from type 'ServiceConfig': name, version, dependencies",
          "line": 45,
          "column": 10
        },
        {
          "type": "error",
          "message": "Expected 3 arguments, but got 0.",
          "line": 79,
          "column": 67
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; }' is not assignable to parameter of type 'string'.",
          "line": 97,
          "column": 60
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 102,
          "column": 59
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; labelNames: string[]; }' is not assignable to parameter of type 'string'.",
          "line": 108,
          "column": 57
        },
        {
          "type": "error",
          "message": "Argument of type '{ name: string; help: string; buckets: number[]; }' is not assignable to parameter of type 'string'.",
          "line": 114,
          "column": 72
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'WebSocketManager'.",
          "line": 164,
          "column": 22
        },
        {
          "type": "error",
          "message": "Property 'version' does not exist on type 'WebSocketManager'.",
          "line": 178,
          "column": 22
        },
        {
          "type": "error",
          "message": "Cannot find module './utils/logging/LoggingManager' or its corresponding type declarations.",
          "line": 9,
          "column": 31
        },
        {
          "type": "error",
          "message": "Type 'number' has no properties in common with type 'Partial<Record<\"success\" | \"operation\" | \"service\", string | number>>'.",
          "line": 180,
          "column": 30
        },
        {
          "type": "error",
          "message": "Cannot find module '../managers/utils/LoggingManager' or its corresponding type declarations.",
          "line": 2,
          "column": 31
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:connected\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 38,
          "column": 18
        },
        {
          "type": "error",
          "message": "Cannot assign to 'agentId' because it is a read-only property.",
          "line": 80,
          "column": 16
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 95,
          "column": 16
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:metrics\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 105,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 115,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:heartbeat\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 131,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:stream\"' is not assignable to parameter of type 'ReservedOrUserEventNames<SocketReservedEventsMap, ClientToServerEvents>'.",
          "line": 146,
          "column": 14
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:new\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 169,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type '\"logs:error\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 187,
          "column": 22
        },
        {
          "type": "error",
          "message": "Argument of type '\"agent:command\"' is not assignable to parameter of type '\"error\" | \"disconnect\" | \"ping\" | \"pong\" | \"host:updated\" | \"process:list\" | \"process:update\" | \"process:error\" | \"process:started\" | \"process:ended\" | \"process:changed\" | \"process:metrics\" | \"terminal:data\" | \"terminal:exit\" | \"connect_error\"'.",
          "line": 224,
          "column": 24
        },
        {
          "type": "error",
          "message": "Type 'unknown[]' is not assignable to type 'AlertRule[]'.\n  Type '{}' is missing the following properties from type 'AlertRule': id, hostId, name, enabled, and 5 more.",
          "line": 55,
          "column": 6
        },
        {
          "type": "error",
          "message": "Type 'unknown[]' is not assignable to type 'AlertRule[]'.",
          "line": 79,
          "column": 6
        },
        {
          "type": "error",
          "message": "Argument of type '{ metricsEnabled: boolean; loggingEnabled: boolean; validation: { strict: boolean; }; }' is not assignable to parameter of type 'ServiceOptions'.\n  Object literal may only specify known properties, and 'metricsEnabled' does not exist in type 'ServiceOptions'.",
          "line": 67,
          "column": 6
        },
        {
          "type": "error",
          "message": "This member cannot have an 'override' modifier because it is not declared in the base class 'BaseService'. Did you mean 'metrics'?",
          "line": 75,
          "column": 11
        },
        {
          "type": "error",
          "message": "Property 'getMetrics' does not exist on type 'BaseService'. Did you mean 'metrics'?",
          "line": 76,
          "column": 30
        },
        {
          "type": "error",
          "message": "Type 'void' is not assignable to type 'DockerCommandResult'.",
          "line": 221,
          "column": 4
        },
        {
          "type": "error",
          "message": "The type 'readonly [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"]' is 'readonly' and cannot be assigned to the mutable type 'string[]'.",
          "line": 165,
          "column": 6
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerNetwork'.",
          "line": 0,
          "column": 31
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerVolume'.",
          "line": 0,
          "column": 46
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerStats'.",
          "line": 0,
          "column": 60
        },
        {
          "type": "error",
          "message": "'ApiError' cannot be used as a value because it was imported using 'import type'.",
          "line": 106,
          "column": 32
        },
        {
          "type": "error",
          "message": "Expected 2-3 arguments, but got 4.",
          "line": 114,
          "column": 6
        },
        {
          "type": "error",
          "message": "Cannot assign to 'name' because it is a read-only property.",
          "line": 116,
          "column": 9
        },
        {
          "type": "error",
          "message": "This member cannot have an 'override' modifier because it is not declared in the base class 'ApiError'.",
          "line": 121,
          "column": 18
        },
        {
          "type": "error",
          "message": "Property 'toJSON' does not exist on type 'ApiError'.",
          "line": 123,
          "column": 15
        },
        {
          "type": "error",
          "message": "Cannot find module './logging' or its corresponding type declarations.",
          "line": 9,
          "column": 7
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerStats'.",
          "line": 14,
          "column": 2
        },
        {
          "type": "error",
          "message": "Module '\"./docker\"' has no exported member 'DockerComposeConfig'.",
          "line": 16,
          "column": 2
        },
        {
          "type": "error",
          "message": "Unexpected empty constructor.",
          "line": 114,
          "column": 25,
          "rule": "@typescript-eslint/no-empty-function"
        }
      ]
    },
    "timestamp": 1733633474342
  }
}
version: '3.8'

services:
  app:
    build:
      context: .
      target: app
    container_name: shh-app
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "1514:1514"
      - "9090:9090"
    environment:
      # Core Configuration
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - HOST=0.0.0.0

      # Database
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-shh_user}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB:-shh}

      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}

      # Security
      - JWT_SECRET=${JWT_SECRET:?JWT secret is required}
    volumes:
      - ${SHH_DATA_DIR:-/var/lib/shh}/logs:/var/log/shh
      - ${SHH_DATA_DIR:-/var/lib/shh}/data:/var/lib/shh
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 512M
    networks:
      - shh_network

  postgres:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: shh-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-shh_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?Database password is required}
      - POSTGRES_DB=${POSTGRES_DB:-shh}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-shh_user} -d ${POSTGRES_DB:-shh}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    networks:
      - shh_network

  redis:
    image: redis:7-alpine
    container_name: shh-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    networks:
      - shh_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  shh_network:
    driver: bridge

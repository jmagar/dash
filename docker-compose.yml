version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://127.0.0.1:4000
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "127.0.0.1:4000:4000"
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=shh
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-key-change-this-in-production
      - JWT_EXPIRATION=30m
      - FRONTEND_URL=http://127.0.0.1:3000
    depends_on:
      - db
      - redis

  db:
    image: postgres:14-alpine
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=shh
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:

version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://backend:3001/api
      - REACT_APP_SOCKET_URL=http://backend:3001
    depends_on:
      - backend
    networks:
      - shh-network

  # Backend Node.js Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
      - DATABASE_URL=postgresql://shh_user:shh_password@postgres:5432/shh_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_development_jwt_secret
      - CORS_ORIGIN=http://frontend:3000
    depends_on:
      - postgres
      - redis
    networks:
      - shh-network

  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=shh_db
      - POSTGRES_USER=shh_user
      - POSTGRES_PASSWORD=shh_password
    ports:
      - "5432:5432"
    networks:
      - shh-network

  # Redis Cache and Session Store
  redis:
    image: redis:6-alpine
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - shh-network

  # Adminer (Optional: Database Management)
  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    networks:
      - shh-network
    depends_on:
      - postgres

  # Prometheus Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - shh-network

  # Grafana Dashboards (Optional)
  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3100:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - shh-network
    depends_on:
      - prometheus

volumes:
  postgres-data:
  redis-data:
  grafana-data:

networks:
  shh-network:
    driver: bridge

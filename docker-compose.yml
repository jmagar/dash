services:
  app:
    build:
      context: .
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_HOST=${POSTGRES_HOST}
    container_name: shh-app
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "1514:1514"
      - "9090:9090"
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${HOME}/.local/share/shh:/var/log/shh
      - ${HOME}/.local/share/shh/data:/var/lib/shh
      - ${HOME}/.local/share/shh/config:/etc/shh
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 512M
    networks:
      - shh_network

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: shh-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ${HOME}/.local/share/shh/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    networks:
      - shh_network

  redis:
    image: redis:7-alpine
    container_name: shh-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ${HOME}/.local/share/redis/data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    networks:
      - shh_network

volumes:
  app_logs:
  app_data:
  app_config:
  postgres_data:
  redis_data:

networks:
  shh_network:
    driver: bridge

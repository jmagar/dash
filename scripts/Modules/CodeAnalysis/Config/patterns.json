{
    "version": "2.0",
    "languages": {
        "typescript": {
            "patterns": [
                {
                    "name": "useEffect-missing-deps",
                    "type": "react-hooks",
                    "regex": "useEffect\\([^,]+,\\s*\\[\\s*\\]\\s*\\)",
                    "severity": "warning",
                    "description": "useEffect with empty dependency array",
                    "recommendation": "Add dependencies or use useLayoutEffect if intentional"
                },
                {
                    "name": "useState-callback",
                    "type": "react-hooks",
                    "regex": "useState\\(\\s*\\([^)]+\\)\\s*=>",
                    "severity": "info",
                    "description": "useState with callback initializer",
                    "recommendation": "Consider if callback is necessary for performance"
                },
                {
                    "name": "unhandled-promise",
                    "type": "async",
                    "regex": "\\bawait\\s+[^.]+\\s*(?!\\.catch|\\.then)",
                    "severity": "warning",
                    "description": "Unhandled Promise rejection",
                    "recommendation": "Add error handling with try/catch or .catch()"
                }
            ]
        },
        "javascript": {
            "patterns": [
                {
                    "name": "console-log",
                    "type": "debugging",
                    "regex": "console\\.log\\(",
                    "severity": "info",
                    "description": "Console.log statement",
                    "recommendation": "Remove debug logs in production"
                },
                {
                    "name": "eval-usage",
                    "type": "security",
                    "regex": "\\beval\\(",
                    "severity": "critical",
                    "description": "Use of eval()",
                    "recommendation": "Avoid eval for security reasons"
                }
            ]
        },
        "powershell": {
            "patterns": [
                {
                    "name": "invoke-expression",
                    "type": "security",
                    "regex": "Invoke-Expression",
                    "severity": "high",
                    "description": "Use of Invoke-Expression",
                    "recommendation": "Avoid Invoke-Expression for security reasons"
                },
                {
                    "name": "write-verbose",
                    "type": "logging",
                    "regex": "Write-Verbose",
                    "severity": "info",
                    "description": "Verbose logging statement",
                    "recommendation": "Ensure consistent logging level usage"
                }
            ]
        }
    },
    "security": {
        "typescript": {
            "patterns": [
                {
                    "name": "sql-injection",
                    "regex": "execute\\s*\\(\\s*['\"`]\\s*SELECT.*\\$\\{",
                    "severity": "critical",
                    "cvss": 9.8,
                    "description": "Potential SQL injection vulnerability",
                    "recommendation": "Use parameterized queries"
                },
                {
                    "name": "xss",
                    "regex": "dangerouslySetInnerHTML|innerHTML\\s*=",
                    "severity": "high",
                    "cvss": 7.5,
                    "description": "Potential XSS vulnerability",
                    "recommendation": "Use safe content rendering methods"
                }
            ]
        },
        "javascript": {
            "patterns": [
                {
                    "name": "hardcoded-secret",
                    "regex": "(?i)(?:password|secret|key|token)\\s*=\\s*['\"][^'\"]+['\"]",
                    "severity": "critical",
                    "cvss": 9.1,
                    "description": "Hardcoded secret detected",
                    "recommendation": "Use environment variables or secure secret storage"
                }
            ]
        },
        "powershell": {
            "patterns": [
                {
                    "name": "plaintext-password",
                    "regex": "-Password\\s+['\"][^'\"]+['\"]",
                    "severity": "critical",
                    "cvss": 9.1,
                    "description": "Plaintext password in command",
                    "recommendation": "Use SecureString or credential objects"
                }
            ]
        }
    },
    "performance": {
        "typescript": {
            "patterns": [
                {
                    "name": "array-in-loop",
                    "regex": "for\\s*\\([^)]+\\)\\s*{[^}]*\\b(push|pop|shift|unshift)\\b",
                    "severity": "warning",
                    "impact": "high",
                    "description": "Array modification in loop",
                    "recommendation": "Consider using array methods or pre-allocation"
                },
                {
                    "name": "nested-subscription",
                    "regex": "useEffect\\([^}]+useEffect\\([^}]+\\}\\s*\\)",
                    "severity": "warning",
                    "impact": "medium",
                    "description": "Nested effect subscriptions",
                    "recommendation": "Combine effects or use custom hook"
                }
            ]
        }
    },
    "suggestions": {
        "Database": {
            "SQL": {
                "popularity": 0.8,
                "description": "SQL database integration",
                "documentation": "https://www.postgresql.org/docs/"
            },
            "MongoDB": {
                "popularity": 0.7,
                "description": "NoSQL database integration",
                "documentation": "https://docs.mongodb.com/"
            }
        },
        "API": {
            "REST": {
                "popularity": 0.9,
                "description": "RESTful API implementation",
                "documentation": "https://docs.microsoft.com/en-us/azure/architecture/best-practices/api-design"
            },
            "GraphQL": {
                "popularity": 0.6,
                "description": "GraphQL API implementation",
                "documentation": "https://graphql.org/learn/"
            }
        }
    }
}
